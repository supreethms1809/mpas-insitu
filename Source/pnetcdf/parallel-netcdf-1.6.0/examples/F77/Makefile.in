#
# Copyright (C) 2012, Northwestern University and Argonne National Laboratory
# See COPYRIGHT notice in top-level directory.
#
# $Id: Makefile.in 1989 2015-01-31 22:25:20Z wkliao $
#
# @configure_input@

srcdir  = @srcdir@
VPATH   = @srcdir@

include ../../macros.make

# note the order of -L list matters
INCLUDES  = -I../../src/lib -I../../src/libf
FLDFLAGS := -L../../src/lib $(FLDFLAGS) $(LDFLAGS)
LIBS     := -lpnetcdf $(LIBS)

F77_SRCS  = nonblocking_write.f \
            column_wise.f \
            block_cyclic.f \
            flexible_api.f \
            get_info.f \
            hints.f \
            put_vara.f \
            put_varn_real.f \
            put_varn_int.f \
            transpose.f \
            vard_int.f \
            i_varn_real.f \
            bput_varn_int8.f

PROGS     = $(F77_SRCS:.f=)
OBJS      = $(F77_SRCS:.f=.o)

GARBAGE      = $(PROGS) *.nc

PACKING_LIST = $(F77_SRCS) depend Makefile.in

all: $(PROGS)

install:

uninstall:

nonblocking_write: nonblocking_write.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

get_info: get_info.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

column_wise: column_wise.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

block_cyclic: block_cyclic.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

put_vara: put_vara.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

hints: hints.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

flexible_api: flexible_api.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

put_varn_int: put_varn_int.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

put_varn_real: put_varn_real.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

transpose: transpose.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

vard_int: vard_int.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

i_varn_real: i_varn_real.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

bput_varn_int8: bput_varn_int8.o $(LIBRARY)
	$(LINK.f) $< $(FLDFLAGS) $(LIBS)

TEST_MPIRUN_4  = $(subst NP,4,$(TEST_MPIRUN))
TEST_MPIRUN_8  = $(subst NP,8,$(TEST_MPIRUN))
TEST_MPIRUN_3  = $(subst NP,3,$(TEST_MPIRUN))

ptest: $(PROGS)
	@for i in $(PROGS); do ( \
        $(TEST_MPIRUN_4) ./$$i -q $(TEST_OUTDIR)/testfile.nc ; \
        if [ $$? = 0 ] ; then \
           echo "PASS: parallel run on 4 processes ------------------- $$i"; \
        else \
           echo "FAILED: parallel run on 4 processes ----------------- $$i"; \
        fi ; ) ; done

ptests: $(PROGS)
	@for i in $(PROGS); do ( \
        $(TEST_MPIRUN_4) ./$$i -q $(TEST_OUTDIR)/testfile.nc ; \
        if [ $$? = 0 ] ; then \
           echo "PASS: parallel run on 4 processes ------------------- $$i"; \
        else \
           echo "FAILED: parallel run on 4 processes ----------------- $$i"; \
        fi ; ) ; done
	@for i in $(PROGS); do ( \
        $(TEST_MPIRUN_8) ./$$i -q $(TEST_OUTDIR)/testfile.nc ; \
        if [ $$? = 0 ] ; then \
           echo "PASS: parallel run on 8 processes ------------------- $$i"; \
        else \
           echo "FAILED: parallel run on 8 processes ----------------- $$i"; \
        fi ; ) ; done
	@for i in $(PROGS); do ( \
        $(TEST_MPIRUN_3) ./$$i -q $(TEST_OUTDIR)/testfile.nc ; \
        if [ $$? = 0 ] ; then \
           echo "PASS: parallel run on 3 processes ------------------- $$i"; \
        else \
           echo "FAILED: parallel run on 3 processes ----------------- $$i"; \
        fi ; ) ; done

include $(srcdir)/depend
include $(srcdir)/../../rules.make

$(LIBRARY): ;

