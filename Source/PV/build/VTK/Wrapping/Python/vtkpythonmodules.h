/*=========================================================================

  Program:   Visualization Toolkit
  Module:    vtkObject.h

  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
// *********** FILE GENERATED BY CMAKE. DO NOT EDIT ****************
#ifndef __VTKPYTHONMODULES_h
#define __VTKPYTHONMODULES_h

#include <Python.h>

#ifdef __cplusplus
extern "C" {
#endif
  
  extern void initvtkCommonCorePython();
  extern void initvtkCommonMathPython();
  extern void initvtkCommonMiscPython();
  extern void initvtkCommonSystemPython();
  extern void initvtkCommonTransformsPython();
  extern void initvtkCommonDataModelPython();
  extern void initvtkCommonExecutionModelPython();
  extern void initvtkFiltersCorePython();
  extern void initvtkCommonComputationalGeometryPython();
  extern void initvtkFiltersGeneralPython();
  extern void initvtkImagingCorePython();
  extern void initvtkImagingFourierPython();
  extern void initvtkFiltersStatisticsPython();
  extern void initvtkFiltersExtractionPython();
  extern void initvtkFiltersSourcesPython();
  extern void initvtkCommonColorPython();
  extern void initvtkFiltersGeometryPython();
  extern void initvtkRenderingCorePython();
  extern void initvtkInteractionStylePython();
  extern void initvtkIOCorePython();
  extern void initvtkIOImagePython();
  extern void initvtkImagingHybridPython();
  extern void initvtkRenderingOpenGLPython();
  extern void initvtkFiltersModelingPython();
  extern void initvtkIOLegacyPython();
  extern void initvtkParallelCorePython();
  extern void initvtkFiltersParallelPython();
  extern void initvtkFiltersProgrammablePython();
  extern void initvtkPythonInterpreterPython();
  extern void initvtkIOXMLParserPython();
  extern void initvtkPVCommonPython();
  extern void initvtkPVVTKExtensionsCorePython();
  extern void initvtkParallelMPIPython();
  extern void initvtkPVClientServerCoreCorePython();
  extern void initvtkPVServerImplementationCorePython();
  extern void initvtkPVServerManagerCorePython();
  extern void initvtkIOMoviePython();
  extern void initvtkIOGeometryPython();
  extern void initvtkIOXMLPython();
  extern void initvtkDomainsChemistryPython();
  extern void initvtkFiltersAMRPython();
  extern void initvtkFiltersParallelStatisticsPython();
  extern void initvtkIOEnSightPython();
  extern void initvtkIOImportPython();
  extern void initvtkInfovisCorePython();
  extern void initvtkIOInfovisPython();
  extern void initvtkIOMPIImagePython();
  extern void initvtkIONetCDFPython();
  extern void initvtkIOParallelPython();
  extern void initvtkIOExodusPython();
  extern void initvtkIOParallelExodusPython();
  extern void initvtkIOParallelXMLPython();
  extern void initvtkImagingSourcesPython();
  extern void initvtkFiltersHybridPython();
  extern void initvtkImagingGeneralPython();
  extern void initvtkImagingColorPython();
  extern void initvtkRenderingFreeTypePython();
  extern void initvtkRenderingAnnotationPython();
  extern void initvtkRenderingVolumePython();
  extern void initvtkInteractionWidgetsPython();
  extern void initvtkRenderingContext2DPython();
  extern void initvtkChartsCorePython();
  extern void initvtkFiltersGenericPython();
  extern void initvtkFiltersHyperTreePython();
  extern void initvtkFiltersParallelMPIPython();
  extern void initvtkRenderingContextOpenGLPython();
  extern void initvtkRenderingGL2PSPython();
  extern void initvtkRenderingLabelPython();
  extern void initvtkIOExportPython();
  extern void initvtkRenderingFreeTypeOpenGLPython();
  extern void initvtkRenderingLICPython();
  extern void initvtkRenderingMatplotlibPython();
  extern void initvtkRenderingParallelPython();
  extern void initvtkRenderingParallelLICPython();
  extern void initvtkPVVTKExtensionsRenderingPython();
  extern void initvtkPVVTKExtensionsDefaultPython();
  extern void initvtkRenderingVolumeOpenGLPython();
  extern void initvtkRenderingVolumeAMRPython();
  extern void initvtkViewsCorePython();
  extern void initvtkViewsContext2DPython();
  extern void initvtkWebGLExporterPython();
  extern void initvtkPVClientServerCoreRenderingPython();
  extern void initvtkPVClientServerCoreDefaultPython();
  extern void initvtkPVServerImplementationRenderingPython();
  extern void initvtkPVServerManagerRenderingPython();
  extern void initvtkTestingRenderingPython();
  extern void initvtkPVServerManagerDefaultPython();
  extern void initvtkPVAnimationPython();
  extern void initvtkFiltersFlowPathsPython();
  extern void initvtkFiltersParallelFlowPathsPython();
  extern void initvtkFiltersImagingPython();
  extern void initvtkFiltersParallelImagingPython();
  extern void initvtkFiltersPythonPython();
  extern void initvtkFiltersTexturePython();
  extern void initvtkFiltersVerdictPython();
  extern void initvtkIOAMRPython();
  extern void initvtkIOPLYPython();
  extern void initvtkIOLSDynaPython();
  extern void initvtkIOParallelLSDynaPython();
  extern void initvtkIOParallelNetCDFPython();
  extern void initvtkIOVPICPython();
  extern void initvtkIOXdmf2Python();
  extern void initvtkImagingMorphologicalPython();
  extern void initvtkInteractionImagePython();
  extern void initvtkParallelMPI4PyPython();
  extern void initvtkRenderingLODPython();
  extern void initvtkPVServerManagerApplicationPython();
  extern void initvtkPVCatalystPython();
  extern void initvtkWebCorePython();
  extern void initvtkParaViewWebCorePython();
#ifdef __cplusplus
}
#endif

void vtkpythonmodulesPythonLoadAllPythonModules()
{
  

  static char namevtkCommonCore[] = "vtkCommonCorePython";
  PyImport_AppendInittab(namevtkCommonCore, initvtkCommonCorePython);

  static char namevtkCommonMath[] = "vtkCommonMathPython";
  PyImport_AppendInittab(namevtkCommonMath, initvtkCommonMathPython);

  static char namevtkCommonMisc[] = "vtkCommonMiscPython";
  PyImport_AppendInittab(namevtkCommonMisc, initvtkCommonMiscPython);

  static char namevtkCommonSystem[] = "vtkCommonSystemPython";
  PyImport_AppendInittab(namevtkCommonSystem, initvtkCommonSystemPython);

  static char namevtkCommonTransforms[] = "vtkCommonTransformsPython";
  PyImport_AppendInittab(namevtkCommonTransforms, initvtkCommonTransformsPython);

  static char namevtkCommonDataModel[] = "vtkCommonDataModelPython";
  PyImport_AppendInittab(namevtkCommonDataModel, initvtkCommonDataModelPython);

  static char namevtkCommonExecutionModel[] = "vtkCommonExecutionModelPython";
  PyImport_AppendInittab(namevtkCommonExecutionModel, initvtkCommonExecutionModelPython);

  static char namevtkFiltersCore[] = "vtkFiltersCorePython";
  PyImport_AppendInittab(namevtkFiltersCore, initvtkFiltersCorePython);

  static char namevtkCommonComputationalGeometry[] = "vtkCommonComputationalGeometryPython";
  PyImport_AppendInittab(namevtkCommonComputationalGeometry, initvtkCommonComputationalGeometryPython);

  static char namevtkFiltersGeneral[] = "vtkFiltersGeneralPython";
  PyImport_AppendInittab(namevtkFiltersGeneral, initvtkFiltersGeneralPython);

  static char namevtkImagingCore[] = "vtkImagingCorePython";
  PyImport_AppendInittab(namevtkImagingCore, initvtkImagingCorePython);

  static char namevtkImagingFourier[] = "vtkImagingFourierPython";
  PyImport_AppendInittab(namevtkImagingFourier, initvtkImagingFourierPython);

  static char namevtkFiltersStatistics[] = "vtkFiltersStatisticsPython";
  PyImport_AppendInittab(namevtkFiltersStatistics, initvtkFiltersStatisticsPython);

  static char namevtkFiltersExtraction[] = "vtkFiltersExtractionPython";
  PyImport_AppendInittab(namevtkFiltersExtraction, initvtkFiltersExtractionPython);

  static char namevtkFiltersSources[] = "vtkFiltersSourcesPython";
  PyImport_AppendInittab(namevtkFiltersSources, initvtkFiltersSourcesPython);

  static char namevtkCommonColor[] = "vtkCommonColorPython";
  PyImport_AppendInittab(namevtkCommonColor, initvtkCommonColorPython);

  static char namevtkFiltersGeometry[] = "vtkFiltersGeometryPython";
  PyImport_AppendInittab(namevtkFiltersGeometry, initvtkFiltersGeometryPython);

  static char namevtkRenderingCore[] = "vtkRenderingCorePython";
  PyImport_AppendInittab(namevtkRenderingCore, initvtkRenderingCorePython);

  static char namevtkInteractionStyle[] = "vtkInteractionStylePython";
  PyImport_AppendInittab(namevtkInteractionStyle, initvtkInteractionStylePython);

  static char namevtkIOCore[] = "vtkIOCorePython";
  PyImport_AppendInittab(namevtkIOCore, initvtkIOCorePython);

  static char namevtkIOImage[] = "vtkIOImagePython";
  PyImport_AppendInittab(namevtkIOImage, initvtkIOImagePython);

  static char namevtkImagingHybrid[] = "vtkImagingHybridPython";
  PyImport_AppendInittab(namevtkImagingHybrid, initvtkImagingHybridPython);

  static char namevtkRenderingOpenGL[] = "vtkRenderingOpenGLPython";
  PyImport_AppendInittab(namevtkRenderingOpenGL, initvtkRenderingOpenGLPython);

  static char namevtkFiltersModeling[] = "vtkFiltersModelingPython";
  PyImport_AppendInittab(namevtkFiltersModeling, initvtkFiltersModelingPython);

  static char namevtkIOLegacy[] = "vtkIOLegacyPython";
  PyImport_AppendInittab(namevtkIOLegacy, initvtkIOLegacyPython);

  static char namevtkParallelCore[] = "vtkParallelCorePython";
  PyImport_AppendInittab(namevtkParallelCore, initvtkParallelCorePython);

  static char namevtkFiltersParallel[] = "vtkFiltersParallelPython";
  PyImport_AppendInittab(namevtkFiltersParallel, initvtkFiltersParallelPython);

  static char namevtkFiltersProgrammable[] = "vtkFiltersProgrammablePython";
  PyImport_AppendInittab(namevtkFiltersProgrammable, initvtkFiltersProgrammablePython);

  static char namevtkPythonInterpreter[] = "vtkPythonInterpreterPython";
  PyImport_AppendInittab(namevtkPythonInterpreter, initvtkPythonInterpreterPython);

  static char namevtkIOXMLParser[] = "vtkIOXMLParserPython";
  PyImport_AppendInittab(namevtkIOXMLParser, initvtkIOXMLParserPython);

  static char namevtkPVCommon[] = "vtkPVCommonPython";
  PyImport_AppendInittab(namevtkPVCommon, initvtkPVCommonPython);

  static char namevtkPVVTKExtensionsCore[] = "vtkPVVTKExtensionsCorePython";
  PyImport_AppendInittab(namevtkPVVTKExtensionsCore, initvtkPVVTKExtensionsCorePython);

  static char namevtkParallelMPI[] = "vtkParallelMPIPython";
  PyImport_AppendInittab(namevtkParallelMPI, initvtkParallelMPIPython);

  static char namevtkPVClientServerCoreCore[] = "vtkPVClientServerCoreCorePython";
  PyImport_AppendInittab(namevtkPVClientServerCoreCore, initvtkPVClientServerCoreCorePython);

  static char namevtkPVServerImplementationCore[] = "vtkPVServerImplementationCorePython";
  PyImport_AppendInittab(namevtkPVServerImplementationCore, initvtkPVServerImplementationCorePython);

  static char namevtkPVServerManagerCore[] = "vtkPVServerManagerCorePython";
  PyImport_AppendInittab(namevtkPVServerManagerCore, initvtkPVServerManagerCorePython);

  static char namevtkIOMovie[] = "vtkIOMoviePython";
  PyImport_AppendInittab(namevtkIOMovie, initvtkIOMoviePython);

  static char namevtkIOGeometry[] = "vtkIOGeometryPython";
  PyImport_AppendInittab(namevtkIOGeometry, initvtkIOGeometryPython);

  static char namevtkIOXML[] = "vtkIOXMLPython";
  PyImport_AppendInittab(namevtkIOXML, initvtkIOXMLPython);

  static char namevtkDomainsChemistry[] = "vtkDomainsChemistryPython";
  PyImport_AppendInittab(namevtkDomainsChemistry, initvtkDomainsChemistryPython);

  static char namevtkFiltersAMR[] = "vtkFiltersAMRPython";
  PyImport_AppendInittab(namevtkFiltersAMR, initvtkFiltersAMRPython);

  static char namevtkFiltersParallelStatistics[] = "vtkFiltersParallelStatisticsPython";
  PyImport_AppendInittab(namevtkFiltersParallelStatistics, initvtkFiltersParallelStatisticsPython);

  static char namevtkIOEnSight[] = "vtkIOEnSightPython";
  PyImport_AppendInittab(namevtkIOEnSight, initvtkIOEnSightPython);

  static char namevtkIOImport[] = "vtkIOImportPython";
  PyImport_AppendInittab(namevtkIOImport, initvtkIOImportPython);

  static char namevtkInfovisCore[] = "vtkInfovisCorePython";
  PyImport_AppendInittab(namevtkInfovisCore, initvtkInfovisCorePython);

  static char namevtkIOInfovis[] = "vtkIOInfovisPython";
  PyImport_AppendInittab(namevtkIOInfovis, initvtkIOInfovisPython);

  static char namevtkIOMPIImage[] = "vtkIOMPIImagePython";
  PyImport_AppendInittab(namevtkIOMPIImage, initvtkIOMPIImagePython);

  static char namevtkIONetCDF[] = "vtkIONetCDFPython";
  PyImport_AppendInittab(namevtkIONetCDF, initvtkIONetCDFPython);

  static char namevtkIOParallel[] = "vtkIOParallelPython";
  PyImport_AppendInittab(namevtkIOParallel, initvtkIOParallelPython);

  static char namevtkIOExodus[] = "vtkIOExodusPython";
  PyImport_AppendInittab(namevtkIOExodus, initvtkIOExodusPython);

  static char namevtkIOParallelExodus[] = "vtkIOParallelExodusPython";
  PyImport_AppendInittab(namevtkIOParallelExodus, initvtkIOParallelExodusPython);

  static char namevtkIOParallelXML[] = "vtkIOParallelXMLPython";
  PyImport_AppendInittab(namevtkIOParallelXML, initvtkIOParallelXMLPython);

  static char namevtkImagingSources[] = "vtkImagingSourcesPython";
  PyImport_AppendInittab(namevtkImagingSources, initvtkImagingSourcesPython);

  static char namevtkFiltersHybrid[] = "vtkFiltersHybridPython";
  PyImport_AppendInittab(namevtkFiltersHybrid, initvtkFiltersHybridPython);

  static char namevtkImagingGeneral[] = "vtkImagingGeneralPython";
  PyImport_AppendInittab(namevtkImagingGeneral, initvtkImagingGeneralPython);

  static char namevtkImagingColor[] = "vtkImagingColorPython";
  PyImport_AppendInittab(namevtkImagingColor, initvtkImagingColorPython);

  static char namevtkRenderingFreeType[] = "vtkRenderingFreeTypePython";
  PyImport_AppendInittab(namevtkRenderingFreeType, initvtkRenderingFreeTypePython);

  static char namevtkRenderingAnnotation[] = "vtkRenderingAnnotationPython";
  PyImport_AppendInittab(namevtkRenderingAnnotation, initvtkRenderingAnnotationPython);

  static char namevtkRenderingVolume[] = "vtkRenderingVolumePython";
  PyImport_AppendInittab(namevtkRenderingVolume, initvtkRenderingVolumePython);

  static char namevtkInteractionWidgets[] = "vtkInteractionWidgetsPython";
  PyImport_AppendInittab(namevtkInteractionWidgets, initvtkInteractionWidgetsPython);

  static char namevtkRenderingContext2D[] = "vtkRenderingContext2DPython";
  PyImport_AppendInittab(namevtkRenderingContext2D, initvtkRenderingContext2DPython);

  static char namevtkChartsCore[] = "vtkChartsCorePython";
  PyImport_AppendInittab(namevtkChartsCore, initvtkChartsCorePython);

  static char namevtkFiltersGeneric[] = "vtkFiltersGenericPython";
  PyImport_AppendInittab(namevtkFiltersGeneric, initvtkFiltersGenericPython);

  static char namevtkFiltersHyperTree[] = "vtkFiltersHyperTreePython";
  PyImport_AppendInittab(namevtkFiltersHyperTree, initvtkFiltersHyperTreePython);

  static char namevtkFiltersParallelMPI[] = "vtkFiltersParallelMPIPython";
  PyImport_AppendInittab(namevtkFiltersParallelMPI, initvtkFiltersParallelMPIPython);

  static char namevtkRenderingContextOpenGL[] = "vtkRenderingContextOpenGLPython";
  PyImport_AppendInittab(namevtkRenderingContextOpenGL, initvtkRenderingContextOpenGLPython);

  static char namevtkRenderingGL2PS[] = "vtkRenderingGL2PSPython";
  PyImport_AppendInittab(namevtkRenderingGL2PS, initvtkRenderingGL2PSPython);

  static char namevtkRenderingLabel[] = "vtkRenderingLabelPython";
  PyImport_AppendInittab(namevtkRenderingLabel, initvtkRenderingLabelPython);

  static char namevtkIOExport[] = "vtkIOExportPython";
  PyImport_AppendInittab(namevtkIOExport, initvtkIOExportPython);

  static char namevtkRenderingFreeTypeOpenGL[] = "vtkRenderingFreeTypeOpenGLPython";
  PyImport_AppendInittab(namevtkRenderingFreeTypeOpenGL, initvtkRenderingFreeTypeOpenGLPython);

  static char namevtkRenderingLIC[] = "vtkRenderingLICPython";
  PyImport_AppendInittab(namevtkRenderingLIC, initvtkRenderingLICPython);

  static char namevtkRenderingMatplotlib[] = "vtkRenderingMatplotlibPython";
  PyImport_AppendInittab(namevtkRenderingMatplotlib, initvtkRenderingMatplotlibPython);

  static char namevtkRenderingParallel[] = "vtkRenderingParallelPython";
  PyImport_AppendInittab(namevtkRenderingParallel, initvtkRenderingParallelPython);

  static char namevtkRenderingParallelLIC[] = "vtkRenderingParallelLICPython";
  PyImport_AppendInittab(namevtkRenderingParallelLIC, initvtkRenderingParallelLICPython);

  static char namevtkPVVTKExtensionsRendering[] = "vtkPVVTKExtensionsRenderingPython";
  PyImport_AppendInittab(namevtkPVVTKExtensionsRendering, initvtkPVVTKExtensionsRenderingPython);

  static char namevtkPVVTKExtensionsDefault[] = "vtkPVVTKExtensionsDefaultPython";
  PyImport_AppendInittab(namevtkPVVTKExtensionsDefault, initvtkPVVTKExtensionsDefaultPython);

  static char namevtkRenderingVolumeOpenGL[] = "vtkRenderingVolumeOpenGLPython";
  PyImport_AppendInittab(namevtkRenderingVolumeOpenGL, initvtkRenderingVolumeOpenGLPython);

  static char namevtkRenderingVolumeAMR[] = "vtkRenderingVolumeAMRPython";
  PyImport_AppendInittab(namevtkRenderingVolumeAMR, initvtkRenderingVolumeAMRPython);

  static char namevtkViewsCore[] = "vtkViewsCorePython";
  PyImport_AppendInittab(namevtkViewsCore, initvtkViewsCorePython);

  static char namevtkViewsContext2D[] = "vtkViewsContext2DPython";
  PyImport_AppendInittab(namevtkViewsContext2D, initvtkViewsContext2DPython);

  static char namevtkWebGLExporter[] = "vtkWebGLExporterPython";
  PyImport_AppendInittab(namevtkWebGLExporter, initvtkWebGLExporterPython);

  static char namevtkPVClientServerCoreRendering[] = "vtkPVClientServerCoreRenderingPython";
  PyImport_AppendInittab(namevtkPVClientServerCoreRendering, initvtkPVClientServerCoreRenderingPython);

  static char namevtkPVClientServerCoreDefault[] = "vtkPVClientServerCoreDefaultPython";
  PyImport_AppendInittab(namevtkPVClientServerCoreDefault, initvtkPVClientServerCoreDefaultPython);

  static char namevtkPVServerImplementationRendering[] = "vtkPVServerImplementationRenderingPython";
  PyImport_AppendInittab(namevtkPVServerImplementationRendering, initvtkPVServerImplementationRenderingPython);

  static char namevtkPVServerManagerRendering[] = "vtkPVServerManagerRenderingPython";
  PyImport_AppendInittab(namevtkPVServerManagerRendering, initvtkPVServerManagerRenderingPython);

  static char namevtkTestingRendering[] = "vtkTestingRenderingPython";
  PyImport_AppendInittab(namevtkTestingRendering, initvtkTestingRenderingPython);

  static char namevtkPVServerManagerDefault[] = "vtkPVServerManagerDefaultPython";
  PyImport_AppendInittab(namevtkPVServerManagerDefault, initvtkPVServerManagerDefaultPython);

  static char namevtkPVAnimation[] = "vtkPVAnimationPython";
  PyImport_AppendInittab(namevtkPVAnimation, initvtkPVAnimationPython);

  static char namevtkFiltersFlowPaths[] = "vtkFiltersFlowPathsPython";
  PyImport_AppendInittab(namevtkFiltersFlowPaths, initvtkFiltersFlowPathsPython);

  static char namevtkFiltersParallelFlowPaths[] = "vtkFiltersParallelFlowPathsPython";
  PyImport_AppendInittab(namevtkFiltersParallelFlowPaths, initvtkFiltersParallelFlowPathsPython);

  static char namevtkFiltersImaging[] = "vtkFiltersImagingPython";
  PyImport_AppendInittab(namevtkFiltersImaging, initvtkFiltersImagingPython);

  static char namevtkFiltersParallelImaging[] = "vtkFiltersParallelImagingPython";
  PyImport_AppendInittab(namevtkFiltersParallelImaging, initvtkFiltersParallelImagingPython);

  static char namevtkFiltersPython[] = "vtkFiltersPythonPython";
  PyImport_AppendInittab(namevtkFiltersPython, initvtkFiltersPythonPython);

  static char namevtkFiltersTexture[] = "vtkFiltersTexturePython";
  PyImport_AppendInittab(namevtkFiltersTexture, initvtkFiltersTexturePython);

  static char namevtkFiltersVerdict[] = "vtkFiltersVerdictPython";
  PyImport_AppendInittab(namevtkFiltersVerdict, initvtkFiltersVerdictPython);

  static char namevtkIOAMR[] = "vtkIOAMRPython";
  PyImport_AppendInittab(namevtkIOAMR, initvtkIOAMRPython);

  static char namevtkIOPLY[] = "vtkIOPLYPython";
  PyImport_AppendInittab(namevtkIOPLY, initvtkIOPLYPython);

  static char namevtkIOLSDyna[] = "vtkIOLSDynaPython";
  PyImport_AppendInittab(namevtkIOLSDyna, initvtkIOLSDynaPython);

  static char namevtkIOParallelLSDyna[] = "vtkIOParallelLSDynaPython";
  PyImport_AppendInittab(namevtkIOParallelLSDyna, initvtkIOParallelLSDynaPython);

  static char namevtkIOParallelNetCDF[] = "vtkIOParallelNetCDFPython";
  PyImport_AppendInittab(namevtkIOParallelNetCDF, initvtkIOParallelNetCDFPython);

  static char namevtkIOVPIC[] = "vtkIOVPICPython";
  PyImport_AppendInittab(namevtkIOVPIC, initvtkIOVPICPython);

  static char namevtkIOXdmf2[] = "vtkIOXdmf2Python";
  PyImport_AppendInittab(namevtkIOXdmf2, initvtkIOXdmf2Python);

  static char namevtkImagingMorphological[] = "vtkImagingMorphologicalPython";
  PyImport_AppendInittab(namevtkImagingMorphological, initvtkImagingMorphologicalPython);

  static char namevtkInteractionImage[] = "vtkInteractionImagePython";
  PyImport_AppendInittab(namevtkInteractionImage, initvtkInteractionImagePython);

  static char namevtkParallelMPI4Py[] = "vtkParallelMPI4PyPython";
  PyImport_AppendInittab(namevtkParallelMPI4Py, initvtkParallelMPI4PyPython);

  static char namevtkRenderingLOD[] = "vtkRenderingLODPython";
  PyImport_AppendInittab(namevtkRenderingLOD, initvtkRenderingLODPython);

  static char namevtkPVServerManagerApplication[] = "vtkPVServerManagerApplicationPython";
  PyImport_AppendInittab(namevtkPVServerManagerApplication, initvtkPVServerManagerApplicationPython);

  static char namevtkPVCatalyst[] = "vtkPVCatalystPython";
  PyImport_AppendInittab(namevtkPVCatalyst, initvtkPVCatalystPython);

  static char namevtkWebCore[] = "vtkWebCorePython";
  PyImport_AppendInittab(namevtkWebCore, initvtkWebCorePython);

  static char namevtkParaViewWebCore[] = "vtkParaViewWebCorePython";
  PyImport_AppendInittab(namevtkParaViewWebCore, initvtkParaViewWebCorePython);
}

#ifndef EXCLUDE_LOAD_ALL_FUNCTION
void CMakeLoadAllPythonModules()
{
  vtkpythonmodulesPythonLoadAllPythonModules();
}
#endif

#endif
