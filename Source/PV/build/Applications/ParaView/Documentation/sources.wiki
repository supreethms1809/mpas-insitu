
==2D Glyph==

Create a 2D glyph (e.g., arrow, cross, dash, etc.)The 2D Glyph source is used
for generating a family of 2D glyphs, each of which lies
in the x-y plane. The output of the 2D Glyph source is
polygonal data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''GlyphType''' (GlyphType)
|
This property specifies the type of the 2D
glyph.
|
9
|
The value(s) is an enumeration of the following:
* Vertex (1)
* Dash (2)
* Cross (3)
* ThickCross (4)
* Triangle (5)
* Square (6)
* Circle (7)
* Diamond (8)
* Arrow (9)
* ThickArrow (10)
* HookedArrow (11)
* EdgeArrow (12)
|-
|'''Filled''' (Filled)
|
If the value of this property is 1, the 2D glyph will be
a filled polygon; otherwise, only the edges (line segments) will be
included in the output. This only applies to closed 2D
glyphs.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''Center''' (Center)
|
Set the x, y, z coordinates of the origin of the 2D
glyph.
|
0.0 0.0 0.0
|


|}

==3D Text==

3D geometric representation of a text stringThe 3D Text source
displays a text string as polygonal data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Text''' (Text)
|
This property contains the text string to be displayed.
The ASCII alphanumeric characters a-z, A-Z, and 0-9 are supported; so
are ASCII punctuation marks. The only supported control character is
"\n", which inserts a new line in the text string.
|
3D Text
|


|}

==AMR GaussianPulse Source==

Create AMR dataset w/ Gaussian PulseAMR
dataset source, used for generating sample Berger-Collela
AMR dataset with a Gaussian Pulse field at the
center.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Dimension''' (Dimension)
|
Sets the desired dimension for the AMR dataset to
generate.
|
3
|
The value(s) is an enumeration of the following:
* 2D (2)
* 3D (3)
|-
|'''Root Spacing''' (Root Spacing)
|
Set the spacing at level 0.
|
0.5
|

|-
|'''RefinementRatio''' (RefinementRatio)
|
Sets the desired dimension for the AMR dataset to
generate.
|
2
|
The value(s) is an enumeration of the following:
* 2 (2)
* 3 (3)
* 4 (4)
|-
|'''XPulseOrigin''' (XPulseOrigin)
|
Set x-coordinate for the pulse origin
|
0.0
|

|-
|'''YPulseOrigin''' (YPulseOrigin)
|
Set y-coordinate for the pulse origin
|
0.0
|

|-
|'''ZPulseOrigin''' (ZPulseOrigin)
|
Set z-coordinate for the pulse origin
|
0.0
|

|-
|'''XPulseWidth''' (XPulseWidth)
|
Set x-coordinate for the pulse Width
|
0.5
|

|-
|'''YPulseWidth''' (YPulseWidth)
|
Set y-coordinate for the pulse Width
|
0.5
|

|-
|'''ZPulseWidth''' (ZPulseWidth)
|
Set z-coordinate for the pulse Width
|
0.5
|

|-
|'''PulseAmplitude''' (PulseAmplitude)
|
Sets the amplitude of the pulse
|
0.5
|


|}

==Annotate Time==

Shows the animation time as text annnotation in the view.The Annotate Time
source can be used to show the animation time in text
annotation.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Format''' (Format)
|
This property specifies the format used to display the
input time (using printf style).
|
Time: %f
|


|}

==Arrow==

3D arrow with a long cylindrical shaft and a cone for the tipThe Arrow source appends a
cylinder to a cone to form a 3D arrow. The length of the
whole arrow is 1.0 unit. The output of the Arrow source is
polygonal data. This polygonal data will not contain
normals, so rendering of the arrow will be performed using
flat shading. The appearance of the arrow can be improved
without significantly increasing the resolution of the tip
and shaft by generating normals. (Use Normals Generation
filter).

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''TipResolution''' (TipResolution)
|
This property specifies the number of faces in the
representation of the tip of the arrow (the cone). As the resolution
increases, the cone will become smoother.
|
6
|

|-
|'''TipRadius''' (TipRadius)
|
This property specifies the radius of the widest part of
the tip of the arrow (the cone).
|
0.1
|

|-
|'''TipLength''' (TipLength)
|
This property specifies the length of the
tip.
|
0.35
|

|-
|'''ShaftResolution''' (ShaftResolution)
|
This property specifies the number of faces of the shaft
of the arrow (the cylinder). As the resolution increases, the cylinder
will become smoother.
|
6
|

|-
|'''ShaftRadius''' (ShaftRadius)
|
This property specifies the radius of the shaft of the
arrow (the cylinder).
|
0.03
|

|-
|'''Invert''' (Invert)
|
Inverts the arrow direction.
|
0
|
Accepts boolean values (0 or 1).

|}

==Axes==

Three lines representing the axes - red line along X, green line along Y, and blue line along Z
The Axes source can be used to add a representation of the
coordinate system axes to the 3D scene. The X axis will be
drawn as a blue line, the Y axis as a green line, and the
Z axis as a red line. The axes can be drawn either as
three lines drawn in the positive direction from the
origin or as three lines crossing at the origin (drawn in
both the positive and negative directions). The output of
the Axes source is polygonal data. This polygonal data has
a scalar per line so that the lines can be colored. It
also has normals defined.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''ScaleFactor''' (ScaleFactor)
|
By default the axes lines have a length of 1 (or 1 in
each direction, for a total length of 2, if value of the Symmetric
property is 1). Increasing or decreasing the value of this property
will make the axes larger or smaller, respectively.
|
1.0
|

|-
|'''Origin''' (Origin)
|
The values of this property set the X, Y, and Z
coordinates of the origin of the axes.
|
0.0 0.0 0.0
|

|-
|'''Symmetric''' (Symmetric)
|
When this property is set to 1, the axes extend along
each of the positive and negative directions for a distance equal to
the value of the Scale Factor property. When set to 0, the axes extend
only in the positive direction.
|
0
|
Accepts boolean values (0 or 1).

|}

==BlockSelectionSource==

BlockSelectionSource is a source producing a block-based
selection used to select blocks from a composite dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Blocks''' (Blocks)
|
The list of blocks that will be added to the selection
produced by the selection source. The blocks are identified using their
composite index (flat index).
|
0
|


|}

==Box==

Create a box with specified X, Y, and Z lengths.The
Box source can be used to add a box to the 3D scene. The
output of the Box source is polygonal data containing both
normals and texture coordinates.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''XLength''' (XLength)
|
This property specifies the length of the box in the X
direction.
|
1.0
|

|-
|'''YLength''' (YLength)
|
This property specifies the length of the box in the Y
direction.
|
1.0
|

|-
|'''ZLength''' (ZLength)
|
This property specifies the length of the box in the Z
direction.
|
1.0
|

|-
|'''Center''' (Center)
|
This property specifies the center of the
box.
|
0.0 0.0 0.0
|


|}

==CompositeDataIDSelectionSource==

CompositeDataIDSelectionSource used to create an ID based
selection for composite datasets (Multiblock or HierarchicalBox
dataset).

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''IDs''' (IDs)
|
The list of IDs that will be added to the selection
produced by the selection source. This takes 3-tuple of values as
(flat-index, process number, id).
|
0 0 0
|


|}

==Cone==

Create a 3D cone of a given radius and height.The Cone
source can be used to add a polygonal cone to the 3D
scene. The output of the Cone source is polygonal
data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Resolution''' (Resolution)
|
This property indicates the number of divisions around
the cone. The higher this number, the closer the polygonal
approximation will come to representing a cone, and the more polygons
it will contain.
|
6
|

|-
|'''Radius''' (Radius)
|
This property specifies the radius of the base of the
cone.
|
0.5
|

|-
|'''Height''' (Height)
|
This property specifies the height of the
cone.
|
1.0
|

|-
|'''Center''' (Center)
|
This property specifies the center of the
cone.
|
0.0 0.0 0.0
|

|-
|'''Direction''' (Direction)
|
Set the orientation vector of the cone. The vector does
not have to be normalized. The cone will point in the direction
specified.
|
1.0 0.0 0.0
|

|-
|'''Capping''' (Capping)
|
If this property is set to 1, the base of the cone will
be capped with a filled polygon. Otherwise, the base of the cone will
be open.
|
1
|
Accepts boolean values (0 or 1).

|}

==Cylinder==

Create a 3D cylinder of a given radius and height.The
Cylinder source can be used to add a polygonal cylinder to
the 3D scene. The output of the Cylinder source is
polygonal data containing both normals and texture
coordinates.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Resolution''' (Resolution)
|
This property indicates the number of divisions around
the cylinder. The higher this number, the closer the polygonal
approximation will come to representing a cylinder, and the more
polygons it will contain.
|
6
|

|-
|'''Height''' (Height)
|
This property specifies the height of the cylinder
(along the y axis).
|
1.0
|

|-
|'''Radius''' (Radius)
|
This property specifies the radius of the
cylinder.
|
0.5
|

|-
|'''Center''' (Center)
|
This property specifies the coordinate value at the
center of the cylinder.
|
0.0 0.0 0.0
|

|-
|'''Capping''' (Capping)
|
If this property is set to 1, the ends of the cylinder
will each be capped with a closed polygon. Otherwise, the ends of the
cylinder will be open.
|
1
|
Accepts boolean values (0 or 1).

|}

==Data Object Generator==

Parses a string to produce composite data objects consisting of simple templated datasets.
vtkDataObjectGenerator parses a string and produces dataobjects from the
dataobject template names it sees in the string. For example, if the
string contains "ID1" the generator will create a vtkImageData.
"UF1", "RG1", "SG1", "PD1", and
"UG1" will produce vtkUniformGrid, vtkRectilinearGrid,
vtkStructuredGrid, vtkPolyData and vtkUnstructuredGrid respectively.
"PD2" will produce an alternate vtkPolydata. You can compose
composite datasets from the atomic ones listed above - "MB{}"
or "HB[]". "MB{ ID1 PD1 MB{} }" for example will
create a vtkMultiBlockDataSet consisting of three blocks: image data,
poly data, multi-block (empty). Hierarchical Box data sets additionally
require the notion of groups, declared within "()" braces, to
specify AMR depth. "HB[ (UF1)(UF1)(UF1) ]" will create a
vtkHierarchicalBoxDataSet representing an octree that is three levels
deep, in which the firstmost cell in each level is
refined.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Program''' (Program)
|
This property contains the string that is parsed to
determine the structured of the output data object to
produce.
|
ID1
|


|}

==Disk==

Create a 3D disk with a specified inner and outer radius.The Disk source can be used
to add a polygonal disk to the 3D scene. The output of the
Disk source is polygonal data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''InnerRadius''' (InnerRadius)
|
Specify inner radius of hole in disc.
|
0.5
|

|-
|'''OuterRadius''' (OuterRadius)
|
Specify outer radius of disc.
|
1.0
|

|-
|'''RadialResolution''' (RadialResolution)
|
Set the number of points in radial
direction.
|
8
|

|-
|'''CircumferentialResolution''' (CircumferentialResolution)
|
Set the number of points in circumferential
direction.
|
8
|


|}

==DistributedTrivialProducer==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''WholeExtent''' (WholeExtent)
|
The values of this property specify the whole extent of
the topologically regular grid.
|
0 -1 0 -1 0 -1
|

|-
|'''UpdateDataset''' (UpdateDataset)
|
This property allow to initialize the trivial producer based
on a previously registered dataset.

|

|


|}

==FrustumSelectionSource==

FrustumSelectionSource is a source producing a frustum
selection.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Frustum''' (Frustum)
|
Vertices that define a frustum for the selection
source.
|
0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 1.0 0.0 0.0 1.0 0.0 0.0 1.0 0.0 1.0 0.0 1.0 0.0 0.0 0.0 1.0 1.0 1.0 0.0 1.0 1.0 0.0 0.0
|


|}

==GlobalIDSelectionSource==

GlobalIDSelectionSource is a source producing a global ID
based selection.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Global IDs''' (IDs)
|
The list of IDs that will be added to the selection
produced by the selection source.
|
0
|


|}

==Hierarchical Fractal==

Test source for AMR with HierarchicalDataSetThe Hierarchical Fractal
source is a collection of uniform grids. All have the same
dimensions. Each block has a different origin and spacing.
This source uses the Mandelbrot source to create cell
data. The fractal array is scaled to look like a volume
fraction.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Dimensions''' (Dimensions)
|
This property specifies the X, Y, Z cell dimensions of a
block.
|
10
|

|-
|'''FractalValue''' (FractalValue)
|
The value of this property will be mapped to 0.5 for use
as a volume fraction.
|
9.5
|

|-
|'''MaximumLevel''' (MaximumLevel)
|
This property specifies how many levels of refinement
should be included in this hierarchical dataset.
|
5
|

|-
|'''GhostLevels''' (GhostLevels)
|
This property specifies whether ghost levels should be
generated at processor boundaries.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''TwoDimensional''' (TwoDimensional)
|
If this property is set to 1, the generated dataset will
be 2D; otherwise it will be 3D.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''Asymetric''' (Asymetric)
|
If this property is set to 0, all the blocks will be the
same size. If it is set to 1, an asymmetric dataset will be created:
some blocks will have an X dimension that is larger by 2
units.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''RectilinearGrids''' (RectilinearGrids)
|
If this property is set to 1, the hierarchical dataset
will contain rectilinear grids; otherwise it will contain uniform
grids.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''TimeStepRangeInfo''' (TimeStepRangeInfo)
|

|

|

|-
|'''TimeStep''' (TimeStep)
|
This property specifies the timestep to use for this
dataset.
|
0
|


|}

==HierarchicalDataIDSelectionSource==

HierarchicalDataIDSelectionSource used to create an ID
based selection for HierarchicalBox datasets.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''IDs''' (IDs)
|
The list of IDs that will be added to the selection
produced by the selection source. This takes 3-tuple of values as
(level, index, id).
|
0 0 0
|


|}

==Hyper Tree Grid==

Hyper tree grid representing a tree-based AMR data setThis source uses input parameters,
most notably a string descriptor, to generate a vtkHyperTreeGrid instance
representing the corresponding a tree-based AMR grid with arbitrary rectilinear
geometry and either binary or ternary subdivision.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Dimension''' (Dimension)
|
This property specifies the dimensionality of
the hyper tree grid.
|
3
|

|-
|'''GridSize''' (GridSize)
|
The three values in this property specify the number
of root cells in each dimension of the hyper tree grid.
|
1 1 1
|

|-
|'''GridScale''' (GridScale)
|
The three values in this property specify the scale
of the root cells in each dimension of the hyper tree grid.
|
1 1 1
|

|-
|'''BranchFactor''' (BranchFactor)
|
This property specifies the subdivision scheme
(binary or ternary) of the hyper tree grid.
|
2
|

|-
|'''MaximumLevel''' (MaximumLevel)
|
The value of this property specifies the maximum
number of levels in the hyper tree grid.
|
1
|

|-
|'''Descriptor''' (Descriptor)
|
This property specifies the string used to describe
the hyper tree grid.
|
.
|


|}

==IDSelectionSource==

IDSelectionSource is a source producing a ID based
selection. This cannot be used for selecting composite
datasets.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''IDs''' (IDs)
|
The list of IDs that will be added to the selection
produced by the selection source. This takes pairs of values as
(process number, id).
|
0 0
|


|}

==Line==

This source creates a line between two points. The resolution indicates how many segments are in the line.The Line
source can be used to interactively (using a 3D widget) or
manually (using the entries on the user interface) add a
line to the 3D scene. The output of the Line source is
polygonal data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Point1''' (Point1)
|
This property controls the coordinates of the first
endpoint of the line.
|
-0.5 0.0 0.0
|

|-
|'''Point2''' (Point2)
|
This property controls the coordinates of the second
endpoint of the line.
|
0.5 0.0 0.0
|

|-
|'''Resolution''' (Resolution)
|
This property specifies the number of pieces into which
to divide the line.
|
6
|


|}

==LocationSelectionSource==

LocationSelectionSource is used to create a location based
selection.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Locations''' (Locations)
|
The list of locations that will be added to the
selection produced by the selection source.
|
0 0 0
|


|}

==Mandelbrot==

Representation (unsigned char) of the Mandlebrot set in up to 3 dimensionsThe
Mandelbrot source can be used to add a uniform rectilinear
grid with scalar values derived from the Mandelbrot set to
the 3D scene. The equation used is z = z^2 + C (where z
and C are complex, and C is a constant). The scalar values
in the grid are the number of iterations of the equation
it takes for the magnitude of the value to become greater
than 2. In the equation, the initial value of z is 0. By
default, the real component of C is mapped onto the X
axis; the imaginary component of C is mapped onto the Y
axis; and the imaginary component of the initial value is
mapped onto the Z axis. If a two-dimensional extent is
specified, the resulting image will be displayed. If a
three-dimensional extent is used, then the bounding box of
the volume will be displayed. The output of the Mandelbrot
source is image (uniform rectilinear)
data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''WholeExtent''' (WholeExtent)
|
The six values in the property indicate the X, Y, and Z
extent of the output data. The first two numbers are the minimum and
maximum X extent; the next two are the minimum and maximum Y extent;
and the final two are the minimum and maximum Z extent. The numbers are
inclusive, so values of 0, 250, 0, 250, 0, 0 indicate that the
dimensions of the output will be 251 x 251 x 1.
|
0 250 0 250 0 0
|

|-
|'''ProjectionAxes''' (ProjectionAxes)
|
The three values in this property allow you to specify
the projection from the 4D space used by the Mandelbrot set to the axes
of the 3D volume. By default, the real component of C (represented by
0) is mapped to the X axis; the imaginary component of C (represented
by 1) is mapped to the Y axis; and the real component of X, the initial
value (represented by 2) is mapped to the Z axis. The imaginary
component of X is represented by 3. All values entered must be between
0 and 3, inclusive.
|
0 1 2
|

|-
|'''OriginCX''' (OriginCX)
|
The four values of this property indicate (in order) the
components of C (real and imaginary) and the components of the initial
value, X (real and imaginary).
|
-1.75 -1.25 0.0 0.0
|

|-
|'''SizeCX''' (SizeCX)
|
The four values of this property indicate the length of
the output in each of the four dimensions (the real and imaginary
components of C and the real and imaginary components of X). The three
dimensions specified in the Projection Axes property will determine
which of these values specify the length of the axes in the
output.
|
2.5 2.5 2.0 1.5
|

|-
|'''Maximum Number of Iterations''' (MaximumNumberOfIterations)
|
The value of this property specifies the limit on
computational iterations (i.e., the maximum number of iterations to
perform to determine if the value will go above 2). Values less than
2.0 after the specified number of iterations are considered in the
fractal set.
|
100
|

|-
|'''SubsampleRate''' (SubsampleRate)
|
This property specifies the rate at which to subsample
the volume. The extent of the dataset in each dimension will be divided
by this value.
|
1
|


|}

==NetworkImageSource==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
Set the name of image file to load.
|

|


|}

==Octree Fractal==

Test source for octree with Mandelbrot fractalCreate an octree from a
Mandelbrot fractal. See the Mandelbrot source for a
description of the variables used.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Dimension''' (Dimension)
|
This property specifies the dimensionality of the
fractal: 1D - Binary tree line, 2D - Quadtree plane, 3D - Octree
volume.
|
2
|

|-
|'''MaximumLevel''' (MaximumLevel)
|
This property specifies the maximum refinement level for
the grid.
|
5
|

|-
|'''MinimumLevel''' (MinimumLevel)
|
This property specifies the minimum refinement level for
the grid.
|
3
|

|-
|'''ProjectionAxes''' (ProjectionAxes)
|
This property indicates which axes of the dataset to
display. See Mandelbrot source for a description of the possible
axes.
|
0 1 2
|

|-
|'''OriginCX''' (OriginCX)
|
This property specifies the imaginary and real values
for C (constant) and X (initial value). See Mandelbrot source for a
description of the C and X variables.
|
-1.75 -1.25 0.0 0.0
|

|-
|'''SizeCX''' (SizeCX)
|
The four values of this property indicate the length of
the output in each of the four dimensions (the real and imaginary
components of C and the real and imaginary components of X). The three
dimensions specified in the Projection Axes property will determine
which of these values specify the length of the axes in the
output.
|
2.5 2.5 2.0 1.5
|

|-
|'''Maximum Number of Iterations''' (MaximumNumberOfIterations)
|
The value of this property specifies the limit on
computational iterations (i.e., the maximum number of iterations to
perform to determine if the value will go above 2). Values less than
2.0 after the specified number of iterations are considered in the
fractal set.
|
100
|

|-
|'''Threshold''' (Threshold)
|
This property specifies a threshold value that
determines when to subdivide a leaf node.
|
2.0
|


|}

==Outline==

3D outline of the specified bounds.The Outline
source creates an axis aligned bounding box given the
user-specified minimum and maximum coordinates for each
axis.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Bounds''' (Bounds)
|
The values of this property specify the minimum and
maximum X, Y, and Z coordinates (X min, X max, Y min, Y max, Z min, Z
max) for drawing the outline.
|
0 1 0 1 0 1
|


|}

==PVTrivialProducer==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''WholeExtent''' (WholeExtent)
|
The values of this property specify the whole extent of
the topologically regular grid.
|
0 -1 0 -1 0 -1
|


|}

==PedigreeIDSelectionSource==

PedigreeIDSelectionSource is a source producing a pedigree
ID based selection.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Pedigree IDs''' (IDs)
|
The list of integer IDs that will be added to the
selection produced by the selection source, specified by the pair
(domain, id).
|
id 0
|

|-
|'''Pedigree String IDs''' (StringIDs)
|
The list of string IDs that will be added to the
selection produced by the selection source, specified by the pair
(domain, id).
|
id foo
|


|}

==Plane==

Create a parallelogram given an origin and two points. The resolution indicates the number of division along each axis of the plane.
The Plane source can be used to add a polygonal
parallelogram to the 3D scene. Unlike the sphere, cone,
and cylinder sources, the parallelogram is exactly
represented at the lowest resolution, but higher
resolutions may be desired if this plane is to be used as
an input to a filter. The output of the Plane source is
polygonal data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Origin''' (Origin)
|
This property specifies the 3D coordinate of the origin
(one corner) of the plane.
|
-0.5 -0.5 0.0
|

|-
|'''Point1''' (Point1)
|
This property specifies the 3D coordinate a second
corner of the parallelogram. The line connecting this point and that
specified by the Origin property define one edge of the parallelogram
(its X axis).
|
0.5 -0.5 0.0
|

|-
|'''Point2''' (Point2)
|
This property specifies the 3D coordinate a third corner
of the parallelogram. The line connecting this point and that specified
by the Origin property define a second edge of the parallelogram (its Y
axis).
|
-0.5 0.5 0.0
|

|-
|'''XResolution''' (XResolution)
|
This property specifies the number of divisions along
the X axis of the parallelogram.
|
1
|

|-
|'''YResolution''' (YResolution)
|
This property specifies the number of divisions along
the Y axis of the parallelogram.
|
1
|


|}

==Point Source==

Create a point cloud of a certain size, radius, and center.The point source creates
a specified number of points within a given radius about a
specified center point.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Center''' (Center)
|
This property specifies the 3D coordinates of the center
of the point cloud.
|
0.0 0.0 0.0
|

|-
|'''NumberOfPoints''' (NumberOfPoints)
|
This property specifies the number of points in the
point cloud.
|
1
|

|-
|'''Radius''' (Radius)
|
This property specifies the radius of the point cloud,
measured from the value of the Center property.
|
0.0
|


|}

==Programmable Source==

Executes a user supplied python script to produce an output dataset.
This source will execute a python script to produce an
output dataset. The source keeps a copy of the python
script in Script, and creates Interpretor, a python
interpretor to run the script upon the first
execution.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''OutputDataSetType''' (OutputDataSetType)
|
The value of this property determines the dataset type
for the output of the programmable source.
|
0
|
The value(s) is an enumeration of the following:
* vtkPolyData (0)
* vtkStructuredGrid (2)
* vtkRectilinearGrid (3)
* vtkUnstructuredGrid (4)
* vtkImageData (6)
* vtkMultiblockDataSet (13)
* vtkHierarchicalBoxDataSet (15)
* vtkTable (19)
|-
|'''Script''' (Script)
|
This property contains the text of a python program that
the programmable source runs.
|

|

|-
|'''Script (RequestInformation)''' (InformationScript)
|
This property is a python script that is executed during
the RequestInformation pipeline pass. Use this to provide information
such as WHOLE_EXTENT to the pipeline downstream.
|

|

|-
|'''Parameters''' (Parameters)
|

|

|

|-
|'''PythonPath''' (PythonPath)
|
A semi-colon (;) separated list of directories to add to
the python library search path.
|

|


|}

==Ruler==

This is a line source that can be used to measure distance between two pointsThe ruler can be used to
interactively (using a 3D widget) or manually (using the
entries on the user interface) specify two points and then
determine the distance between the two points. To place
points on the surface of any dataset, one can use the 'p'
key shortcut.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Point1''' (Point1)
|
This property controls the coordinates of the first
endpoint of the line.
|
-0.5 0.0 0.0
|

|-
|'''Point2''' (Point2)
|
This property controls the coordinates of the second
endpoint of the line.
|
0.5 0.0 0.0
|


|}

==SelectionQuerySource==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FieldType''' (FieldType)
|
The location of the array the selection came from (ex,
point, cell).
|
0
|
The value(s) is an enumeration of the following:
* CELL (0)
* POINT (1)
* FIELD (2)
* VERTEX (3)
* EDGE (4)
* ROW (5)
|-
|'''QueryString''' (QueryString)
|

|

|

|-
|'''CompositeIndex''' (CompositeIndex)
|

|
-1
|

|-
|'''HierarchicalLevel''' (HierarchicalLevel)
|

|
-1
|

|-
|'''HierarchicalIndex''' (HierarchicalIndex)
|

|
-1
|

|-
|'''ProcessID''' (ProcessID)
|

|
-1
|

|-
|'''UserFriendlyText''' (UserFriendlyText)
|
Reconstructs the query as a user friendly text eg. "IDs
&gt;= 12".
|

|

|-
|'''InsideOut''' (InsideOut)
|
When this property is false the selection describes
everything that should be extracted. When this is true the selection
describes everything that should NOT be extracted.
|
0
|
Accepts boolean values (0 or 1).

|}

==SelectionSourceBase==

Internal proxy used to define the common API for Selection
Source proxies. Do not use.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FieldType''' (FieldType)
|
The location of the array the selection came from (ex,
point, cell).
|
0
|
The value(s) is an enumeration of the following:
* CELL (0)
* POINT (1)
* FIELD (2)
* VERTEX (3)
* EDGE (4)
* ROW (5)
|-
|'''ContainingCells''' (ContainingCells)
|
When field type is POINT, this controls whether single
vertex cells will be produced for each selected point, or whether the
cells that contain each selected point will be produced. When field
type is CELL this has no effect.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''InsideOut''' (InsideOut)
|
When this property is false the selection describes
everything that should be extracted. When this is true the selection
describes everything that should NOT be extracted.
|
0
|
Accepts boolean values (0 or 1).

|}

==Sphere==

Create a 3D sphere given a center and radius.The Sphere source can be
used to add a polygonal sphere to the 3D scene. The output
of the Sphere source is polygonal data with point normals
defined.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Center''' (Center)
|
This property specifies the 3D coordinates for the
center of the sphere.
|
0.0 0.0 0.0
|

|-
|'''Radius''' (Radius)
|
This property specifies the radius of the
sphere.
|
0.5
|

|-
|'''ThetaResolution''' (ThetaResolution)
|
The value of this property represents the number of
divisions between Start Theta and End Theta around the sphere. (See the
Start Theta and End Theta properties.) The theta divisions are similar
to longitude lines on the earth. The higher the resolution, the closer
the approximation will come to a sphere, and the more polygons there
will be.
|
8
|

|-
|'''StartTheta''' (StartTheta)
|
To form a complete sphere, the value of this property
should be 0 degrees, and the value of the End Theta property should be
360 degrees. The value of this property can be adjusted to form only a
portion of a sphere.
|
0
|

|-
|'''EndTheta''' (EndTheta)
|
The value of this property can be adjusted to form only
a portion of a sphere. This value is measured in
degrees.
|
360
|

|-
|'''PhiResolution''' (PhiResolution)
|
The value of this property represents the number of
divisions between Start Phi and End Phi on the sphere. (See the Start
Phi and End Phi properties.) The phi divisions are similar to latitude
lines on the earth.
|
8
|

|-
|'''StartPhi''' (StartPhi)
|
To form a complete sphere, the value of this property
should be 0 degrees, and the value of the End Phi property should be
180 degrees. The value of this property can be adjusted to form only a
portion of a sphere. Set the starting angle (in degrees) in the
latitudinal direction.
|
0
|

|-
|'''EndPhi''' (EndPhi)
|
The value of this property can be adjusted to form only
a portion of a sphere. The value is measured in
degrees.
|
180
|


|}

==SplineSource==

Tessellate parametric functions.This class
tessellates parametric functions. The user must specify
how many points in the parametric coordinate directions
are required (i.e., the resolution), and the mode to use
to generate scalars.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Parametric Function''' (ParametricFunction)
|
Property used to reference the parametric function as
data generator.
|

|
The value can be one of the following:
* Spline (parametric_functions)


|}

==Superquadric==

Create a superquadric according to the theta and phi roundness parameters. This one source can generate a wide variety of 3D objects including a box, a sphere, or a torus.
The Superquadric source can be used to add a polygonal superquadric to
the 3D scene. This source can be used to create a wide variety of shapes
(e.g., a sphere, a box, or a torus) by adjusting the roundness
parameters. The output of the Superquadric source is polygonal data with
point normals and texture coordinates defined.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Center''' (Center)
|
This property specifies the 3D coordinates of the center
of the superquadric.
|
0.0 0.0 0.0
|

|-
|'''Scale''' (Scale)
|
The three values in this property are used to scale the
superquadric in X, Y, and Z. The surface normals will be computed
correctly even with anisotropic scaling.
|
1.0 1.0 1.0
|

|-
|'''ThetaResolution''' (ThetaResolution)
|
The value of this property represents the number of
divisions in the theta (longitudinal) direction. This value will be
rounded to the nearest multiple of 8.
|
16
|

|-
|'''PhiResolution''' (PhiResolution)
|
The value of this property represents the number of
divisions in the phi (latitudinal) direction. This number will be
rounded to the nearest multiple of 4.
|
16
|

|-
|'''Thickness''' (Thickness)
|
If the value of the Toroidal property is 1, this value
represents the thickness of the superquadric as a value between 0 and
1. A value close to 0 leads to a thin object with a large hole, and a
value near 1 leads to a thick object with a very small hole. Changing
the thickness does not change the outer radius of the
superquadric.
|
0.3333
|

|-
|'''ThetaRoundness''' (ThetaRoundness)
|
This property defines the roundness of the superquadric
in the theta (longitudinal) direction. A value of 0 represents a
rectangular shape, a value of 1 represents a circular shape, and values
greater than 1 produce higher order shapes.
|
1
|

|-
|'''PhiRoundness''' (PhiRoundness)
|
This property defines the roundness in the phi
(latitudinal) direction. A value of 0 represents a rectangular shape, a
value of 1 represents a circular shape, and values greater than 1
produce higher order shapes.
|
1
|

|-
|'''Size''' (Size)
|
The value of this property represents the isotropic size
of the superquadric. Note that both the Size and Thickness properties
control coefficients of superquadric generation, so the value of this
property may not exactly describe the size of the
superquadric.
|
0.5
|

|-
|'''Toroidal''' (Toroidal)
|
If the value of this property is 0, the generated
superquadric will not contain a hole (i.e., the superquadric will be
ellipsoidal). Otherwise, a toroidal object is
generated.
|
1
|
Accepts boolean values (0 or 1).

|}

==Test3DWidget==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Resolution''' (Resolution)
|
Set the number of faces used to generate the
cone.
|
6
|


|}

==Text==

The Text source generates a table containing text.The Text source is used to
generate a 1x1 vtkTable with a single text
string.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Text''' (Text)
|
This property specifies the text to
display.
|
Text
|


|}

==ThresholdSelectionSource==

ThresholdSelectionSource is used to create a threshold
based selection.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Thresholds''' (Thresholds)
|
The list of thresholds that will be added to the
selection produced by the selection source.
|

|

|-
|'''ArrayName''' (ArrayName)
|
For threshold and value selection, this controls the
name of the scalar array that will be thresholded
within.
|
none
|


|}

==Time Source==

Produces a single cell uniform grid with data values that vary over a sin(t) wave from t=0 to t=1 (radian).Produces a
single cell uniform grid with data values that vary over a
sin(t) wave from t=0 to t=1 (radian).

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Analytic''' (Analytic)
|
Makes the time source produce discrete steps of or an
analytic sin wave.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''X Amplitude''' (X Amplitude)
|
Controls how far the data set moves along X over
time.
|
0.0
|

|-
|'''Y Amplitude''' (Y Amplitude)
|
Controls how far the data set moves along Y over
time.
|
0.0
|

|-
|'''Growing''' (Growing)
|
Makes the time source grow and shrink along Y over
time.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|


|}

==TrivialProducer==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''


|}

==Wavelet==

Create a regular rectilinear grid in up to three dimensions with values varying according to a periodic function.
The Wavelet source can be used to create a uniform
rectilinear grid in up to three dimensions with values
varying according to the following periodic function. OS =
M * G * (XM * sin(XF * x) + YM * sin(YF * y) + ZM * cos(ZF
* z)) OS is the output scalar; M represents the maximum
value; G represents the Gaussian; XM, YM, and ZM are the
X, Y, and Z magnitude values; and XF, YF, and ZF are the
X, Y, and Z frequency values. If a two-dimensional extent
is specified, the resulting image will be displayed. If a
three-dimensional extent is used, then the bounding box of
the volume will be displayed.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Whole Extent''' (WholeExtent)
|
The six values in this property indicate the X, Y, and Z
extent of the output data. The first two values represent the minimum
and maximum X indices, the next two are the minimum and maximum Y
indices, and the last two are the minimum and maximum Z
indices.
|
-10 10 -10 10 -10 10
|

|-
|'''Center''' (Center)
|
This property specifies the 3D coordinates of the center
of the dataset.
|
0.0 0.0 0.0
|

|-
|'''Maximum''' (Maximum)
|
This parameter specifies the maximum value (M) of the
function.
|
255.0
|

|-
|'''XFreq''' (XFreq)
|
This property specifies the natural frequency in X (XF
in the equation).
|
60.0
|

|-
|'''YFreq''' (YFreq)
|
This property specifies the natural frequency in Y (YF
in the equation).
|
30.0
|

|-
|'''ZFreq''' (ZFreq)
|
This property specifies the natural frequency in Z (ZF
in the equation).
|
40.0
|

|-
|'''XMag''' (XMag)
|
This property specifies the wave amplitude in X (XM in
the equation).
|
10.0
|

|-
|'''YMag''' (YMag)
|
This property specifies the wave amplitude in Y (YM in
the equation).
|
18.0
|

|-
|'''ZMag''' (ZMag)
|
This property specifies the wave amplitude in Z (ZM in
the equation).
|
5.0
|

|-
|'''StandardDeviation''' (StandardDeviation)
|
This property specifies the standard deviation of the
Gaussian used in computing this function.
|
0.5
|

|-
|'''SubsampleRate''' (SubsampleRate)
|
This property specifies the rate at which to subsample
the volume. The extent of the dataset in each dimension will be divided
by this value. (See the Whole Extent property.)
|
1
|


|}

