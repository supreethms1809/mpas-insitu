
==ADIOSReader==

Read ADIOS BP files using VTKs schema.
Reader to read ADIOS BP files using a VTK specific schema


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|

This property specifies the ADIOS filename.

|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|

|-
|'''Read Method''' (ReadMethod)
|

|
0
|
The value(s) is an enumeration of the following:
* BP (0)
* BPAggregate (1)
* DataSpaces (3)
* DIMES (4)
* FlexPath (5)

|}

==AVS UCD Reader==

Reads binary or ASCII files stored in AVS UCD format.The AVS UCD
reader reads binary or ASCII files stored in AVS UCD
format. The default file extension is .inp. The output of
this reader is unstructured grid. This supports reading a
file series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the reader. If more than
one file is specified, the reader will switch to file series mode in
which it will pretend that it can support time and provide one file per
time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==BYU Reader==

Reads Movie.BYU files to produce polygonal data.The BYU reader reads
data stored in Movie.BYU format. The expected file
extension is .g. The datasets resulting from reading these
files are polygonal.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the BYU
reader.
|

|
The value(s) must be a filename (or filenames).

|}

==CML Molecule Reader==

A reader for Chemical Markup Language (CML)
This is a reader for Chemical Markup Language (CML) which
describes chemical information using XML.


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the CML file
name
|

|
The value(s) must be a filename (or filenames).

|}

==CSV Reader==

Reads a Delimited Text values file into a 1D rectilinear grid.The CSV
reader reads a Delimited Text values file into a 1D
rectilinear grid. If the file was saved using the
CSVWriter, then the rectilinear grid's points and point
data can be restored as well as the cell data. Otherwise
all the data in the CSV file is treated as cell data. The
default file extension is .csv as well as .txt.
This can read file series as well.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be a csv file. If more than one file is specified, the
reader will switch to file series mode in which it will pretend that it
can support time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==DEM Reader==

Reads a DEM (Digital Elevation Model) file.The DEM reader
reads Digital Elevation Model files containing elevation
values derived from the U. S. Geologic Survey. The default
file extension is .dem. This reader produces uniform
rectilinear (image/volume) data output.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the DEM
(Digital Elevation Map) reader.
|

|
The value(s) must be a filename (or filenames).

|}

==DICOM Reader (Single File)==

Reads DICOM regular rectilinear grid data from a lone file.
DICOM is a file format often used in medical imaging. This version
of the reader reads a single file (as opposed to a collection of
files). The DICOM reader currently only supports uncompressed
files.


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|

DICOM file to load. This version of the reader only supports
loading one file at a time.

|

|
The value(s) must be a filename (or filenames).

|}

==DICOM Reader (directory)==

Reads DICOM regular rectilinear grid data from a directory containing a file.
DICOM is a file format often used in medical imaging. This version
of the reader will look at all files in the same directory of the
selected file and load them as planes of the same data set. It is
typically for 3D medical scanners to store planes as set of files
in a directory.


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|

A file in the directory of files to be loaded. The DICOM reader
will actually load all valid DICOM files in the same directory as
this file as part of the same dataset. This is typical of how
DICOM files are often stored.

|

|
The value(s) must be a filename (or filenames).

|}

==ENZO AMR Particles Reader==

Reads AMR particles from an ENZO datasetThe
Enzo particles reader loads particle simulation data
stored in Enzo HDF5 format. The output of this reader is
MultiBlock dataset where each block is a vtkPolyData that
holds the particles (points) and corresponding particle
data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==EnSight Master Server Reader==

Reads files in EnSight's Master Server format.The EnSight
Master Server reader reads EnSight's parallel files. The
master file ususally has a .sos extension and may point to
multiple .case files. The output is a multi-block
dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''CaseFileName''' (CaseFileName)
|
This property specifies the name of the .sos file for
the EnSight Master Server reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''ByteOrder''' (ByteOrder)
|
This property indicates the byte order of the binary
file(s).
|
0
|
The value(s) is an enumeration of the following:
* BigEndian (0)
* LittleEndian (1)
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|

|-
|'''SetTimeValue''' (SetTimeValue)
|
This property indicates which time value to
read.
|
0.0
|

|-
|'''CellArrayInfo''' (CellArrayInfo)
|

|

|

|-
|'''Cell Arrays''' (CellArrayStatus)
|
This property lists which cell-centered arrays to
read.
|

|
The list of array names is provided by the reader.
|-
|'''PointArrayInfo''' (PointArrayInfo)
|

|

|

|-
|'''Point Arrays''' (PointArrayStatus)
|
This property lists which point-centered arrays to
read.
|

|
The list of array names is provided by the reader.

|}

==EnSight Reader==

Reads EnSight 6 and Gold files.The EnSight reader reads
files in the format produced by CEI's EnSight. EnSight 6
and Gold files (both ASCII and binary) are supported. The
default extension is .case. The output of this reader is a
multi-block dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''CaseFileName''' (CaseFileName)
|
This property specifies the case file name for the
EnSight reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|

|-
|'''CellArrayInfo''' (CellArrayInfo)
|

|

|

|-
|'''Cell Arrays''' (CellArrayStatus)
|
This property lists which cell-centered arrays to
read.
|

|
The list of array names is provided by the reader.
|-
|'''PointArrayInfo''' (PointArrayInfo)
|

|

|

|-
|'''Point Arrays''' (PointArrayStatus)
|
This property lists which point-centered arrays to
read.
|

|
The list of array names is provided by the reader.

|}

==Enzo Reader==

Read hierarchical box dataset from an Enzo file.
This Enzo reader loads data stored in Enzo format. The
output of this reader is a hierarchical-box
dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==ExodusIIReader==

Reads an Exodus II file to produce an unstructured grid.The Exodus reader loads
Exodus II files and produces an unstructured grid output.
The default file extensions are .g, .e, .ex2, .ex2v2,
.exo, .gen, .exoII, .exii, .0, .00, .000, and .0000. The
file format is described fully at:
http://endo.sandia.gov/SEACAS/Documentation/exodusII.pdf.
Each Exodus file contains a single set of points with 2-D
or 3-D coordinates plus one or more blocks, sets, and
maps. Block group elements (or their bounding edges or
faces) of the same type together. Sets select subsets
(across all the blocks in a file) of elements, sides of
elements (which may be of mixed dimensionality), bounding
faces of volumetric elements, or bounding edges of
volumetric or areal elements. Each block or set may have
multiple result variables, each of which defines a value
per element, per timestep. The elements (cells), faces of
elements (when enumerated in face blocks), edges of
elements (when enumerated in edge blocks), and nodes
(points) in a file may be assigned an arbitrary integer
number by an element map, face map, edge map, or node map,
respectively. Usually, only a single map of each type
exists and is employed to assign a unique global ID to
entities across multiple files which partition a large
mesh for a distributed-memory calculation. However here
may be multiply maps of each type and there are no
constraints which force the integers to be unique. The
connectivity of elements is constant across all of the
timesteps in any single Exodus II file. However, multiple
files which specify a single time-evolution of a mesh may
be used to represent meshes which exhibit changes in
connectivity infrequently. Field variable mode_shape[0]
represents the time step (t_index) if HasModeShapes is
not set or the ModeShape otherwise.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the Exodus
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''UseMetaFile''' (UseMetaFile)
|
This hidden property must always be set to 1 for this
proxy to work.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|


|}

==FLASH AMR Particles Reader==

Reads AMR particles from FLASH datasetThe
Flash particles reader loads particle simulation data
stored in Flash format. The output of this reader is a
MultiBlock dataset where each block is vtkPolyData that
holds the particles and corresponding particle
data.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==FacetReader==

Reads ASCII files stored in Facet format.The Facet
Reader reads files in Facet format: a simple ASCII file
format listing point coordinates and connectivity between
these points. The default file extension is .facet. The
output of the Facet Reader is polygonal.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the Facet
reader.
|

|
The value(s) must be a filename (or filenames).

|}

==Flash Reader==

Read hierarchical box dataset from a Flash dataset.
This Flash reader loads data stored in Enzo format. The
output of this reader is a hierarchical-box
dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==Fluent Case Reader==

Reads a dataset in Fluent file format.
FLUENTReader creates an unstructured grid dataset. It
reads .cas and .dat files stored in FLUENT native format
(or a file series of the same.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
The name of the files to load.
|

|
The value(s) must be a filename (or filenames).

|}

==Gaussian Cube Reader==

Produce polygonal data by reading a Gaussian Cube file.The Gaussian
Cube reader produces polygonal data by reading data files
produced by the Gaussian software package. The expected
file extension is .cube.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the Gaussian
Cube reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''HBScale''' (HBScale)
|
A scaling factor to compute bonds with hydrogen
atoms.
|
1.0
|

|-
|'''BScale''' (BScale)
|
A scaling factor to compute bonds between non-hydrogen
atoms
|
1.0
|


|}

==Image Reader==

Reads raw regular rectilinear grid data from a file. The dimensions and type of the data must be specified.
The Image reader reads raw, regular, rectilinear grid
(image/volume) data from a file. Because no metadata is
provided, the user must specify information about the
size, spacing, dimensionality, etc. about the
dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FilePrefix''' (FilePrefix)
|
The text string contained in this property specifies the
file prefix (directory plus common initial part of file name) for the
raw binary uniform rectilinear grid dataset.
|

|
The value(s) must be a filename (or filenames).
|-
|'''FilePattern''' (FilePattern)
|
The text string contained in the property specifies the
format string to determine the file names necessary for reading this
dataset. In creating the filenames, %s will be replaced by the prefix
and %d by a digit which represents the slice number in Z. The format
string is the same as that used by printf.
|
%s
|

|-
|'''DataScalarType''' (DataScalarType)
|
The value of this property indicates the scalar type of
the pixels/voxels in the file(s): short, int, float ...
|
4
|
The value(s) is an enumeration of the following:
* char (2)
* unsigned char (3)
* short (4)
* unsigned short (5)
* int (6)
* unsigned int (7)
* long (8)
* unsigned long (9)
* float (10)
* double (11)
|-
|'''DataByteOrder''' (DataByteOrder)
|
This property indicates the byte order of the binary
file(s).
|
0
|
The value(s) is an enumeration of the following:
* BigEndian (0)
* LittleEndian (1)
|-
|'''FileDimensionality''' (FileDimensionality)
|
This property indicates whether the file(s) in this
dataset contain slices (2D) or volumes (3D).
|
3
|
The value(s) is an enumeration of the following:
* 2 (2)
* 3 (3)
|-
|'''DataOrigin''' (DataOrigin)
|
The coordinate contained in this property specifies the
position of the point with index (0,0,0).
|
0.0 0.0 0.0
|

|-
|'''DataSpacing''' (DataSpacing)
|
This property specifies the size of a voxel in each
dimension.
|
1.0 1.0 1.0
|

|-
|'''DataExtent''' (DataExtent)
|
This property specifies the minimum and maximum index
values of the data in each dimension (xmin, xmax, ymin, ymax, zmin,
zmax).
|
0 0 0 0 0 0
|

|-
|'''NumberOfScalarComponents''' (NumberOfScalarComponents)
|
This property specifies the number of components the
scalar value at each pixel or voxel has (e.g., RGB - 3 scalar
components).
|
1
|

|-
|'''ScalarArrayName''' (ScalarArrayName)
|
This property contains a text string listing a name to
assign to the point-centered data array read.
|
ImageFile
|

|-
|'''FileLowerLeft''' (FileLowerLeft)
|
This property determines whether the data originates in
the lower left corner (on) or the upper left corner (off). Most
scientific data is written with a right-handed axes that originates in
the lower left corner. However, several 2D image file formats write the
image from the upper left corner.
|
1
|
Accepts boolean values (0 or 1).

|}

==JPEG Series Reader==

Reads a series of JPEG files into an time sequence of image datas.The JPEG series
reader reads JPEG files. The output is a time sequence of
uniform rectilinear (image/volume) dataset. The default
file extension is .jpg or .jpeg.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the reader. If more than
one file is specified, the reader will switch to file series mode in
which it will pretend that it can support time and provide one file per
time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==LSDynaReader==

Read LS-Dyna databases (d3plot).This reader
reads LS-Dyna databases.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
Set the file name for the LSDyna reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|

|-
|'''SolidArrayInfo''' (SolidArrayInfo)
|

|

|

|-
|'''Solid Arrays''' (SolidArrayStatus)
|
Select which solid arrays to read.
|

|
The list of array names is provided by the reader.
|-
|'''ThickShellArrayInfo''' (ThickShellArrayInfo)
|

|

|

|-
|'''Thick Shell Arrays''' (ThickShellArrayStatus)
|
Select which thick shell arrays to read.
|

|
The list of array names is provided by the reader.
|-
|'''ShellArrayInfo''' (ShellArrayInfo)
|

|

|

|-
|'''Shell Arrays''' (ShellArrayStatus)
|
Select which shell arrays to read.
|

|
The list of array names is provided by the reader.
|-
|'''RigidBodyArrayInfo''' (RigidBodyArrayInfo)
|

|

|

|-
|'''Rigid Body Arrays''' (RigidBodyArrayStatus)
|
Select which rigid body arrays to load.
|

|
The list of array names is provided by the reader.
|-
|'''RoadSurfaceArrayInfo''' (RoadSurfaceArrayInfo)
|

|

|

|-
|'''Road Surface Arrays''' (RoadSurfaceArrayStatus)
|
Select which road surface arrays to
read.
|

|
The list of array names is provided by the reader.
|-
|'''BeamArrayInfo''' (BeamArrayInfo)
|

|

|

|-
|'''Beam Arrays''' (BeamArrayStatus)
|
Select which beam arrays to read.
|

|
The list of array names is provided by the reader.
|-
|'''ParticleArrayInfo''' (ParticleArrayInfo)
|

|

|

|-
|'''Particle Arrays''' (ParticleArrayStatus)
|
Select which particle arrays to read.
|

|
The list of array names is provided by the reader.
|-
|'''PointArrayInfo''' (PointArrayInfo)
|

|

|

|-
|'''Point Arrays''' (PointArrayStatus)
|
Select which point-centered arrays to
read.
|

|
The list of array names is provided by the reader.
|-
|'''PartArrayInfo''' (PartArrayInfo)
|

|

|

|-
|'''Part Arrays''' (PartArrayStatus)
|
Select which part arrays to read.
|

|
The list of array names is provided by the reader.
|-
|'''DeformedMesh''' (DeformedMesh)
|
Should the mesh be deformed over time (if the Deflection
node array is set to load)?
|
1
|
Accepts boolean values (0 or 1).
|-
|'''RemoveDeletedCells''' (RemoveDeletedCells)
|
Should cells that have been deleted (failed
structurally, for example) be removed from the mesh?
|
1
|
Accepts boolean values (0 or 1).

|}

==Legacy VTK Reader==

Reads files stored in VTK's legacy file format.The Legacy VTK reader
loads files stored in VTK's legacy file format (before VTK
4.2, although still supported). The expected file
extension is .vtk. The type of the dataset may be
structured grid, uniform rectilinear grid (image/volume),
non-uniform rectiinear grid, unstructured grid, or
polygonal. This reader also supports file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the reader. If more than
one file is specified, the reader will switch to file series mode in
which it will pretend that it can support time and provide one file per
time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==MFIXReader==

Reads a dataset in MFIX file format.
vtkMFIXReader creates an unstructured grid dataset. It
reads a restart file and a set of sp files. The restart
file contains the mesh information. MFIX meshes are either
cylindrical or rectilinear, but this reader will convert
them to an unstructured grid. The sp files contain
transient data for the cells. Each sp file has one or more
variables stored inside it.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
Set the file name for the MFIX reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''CellArrayInfo''' (CellArrayInfo)
|

|

|

|-
|'''Cell Arrays''' (CellArrayStatus)
|
Select which cell-centered arrays to
read.
|

|
The list of array names is provided by the reader.
|-
|'''TimestepValues''' (TimestepValues)
|

|

|


|}

==Meta File Series Reader==

Reads a series of meta images.Read a series
of meta images. The file extension is .mhd

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the reader. Each file is
expected to be in the meta format. The standard extension is .mhd. If
more than one file is specified, the reader will switch to file series
mode in which it will pretend that it can support time and provide one
file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==NetCDF CAM reader==

Reads unstructured grid data from NetCDF files. There are 2 files, a points+fields file which is set as FileName and a cell connectivity file set as ConnectivityFileName.
This reader reads in unstructured grid data from a NetCDF
file. The grid data is in a set of planes as quadrilateral
cells. The reader creates hex cells in order to create a
volumetric grid.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==NetCDF MPAS reader==

Reads unstructured grid MPAS data from a file.
This reader reads unstructured grid MPAS data from a file.
It creates a dual grid It assumes the grid is in the
global domain. By default, it creates a spherical view of
vertical layer 0. It assumes it is ocean data. It gives
several options to change the view to multilayer (all
vertical layers will have a thickness determined by the
value in the slider), lat/lon projection or atmospheric
(vertical layers go out away from the center of the
sphere, instead of down towards the center as they do for
ocean data). It doesn't handle data in the rectangular
domain. This is not a parallel reader. It expects one .nc
file of data. It can display cell or vertex-centered data,
but not edge data. When converted to the dual grid,
cell-centered data becomes vertex-centered and vice-versa.
NOTES: When using this reader, it is important that you
remember to do the following: 1. When changing a selected
variable, remember to select it also in the drop down box
to color by. It doesn't color by that variable
automatically 2. When selecting multilayer sphere view,
start with layer thickness around 100,000 3. When
selecting multilayer lat/lon view, start with layer
thickness around 10 4. Always click the -Z orientation
after making a switch from lat/lon to sphere, from single
to multilayer or changing thickness. 5. Be conservative on
the number of changes you make before hitting Apply, since
there may be bugs in this reader. Just make one change and
then hit Apply. For problems, contact Christine Ahrens
(cahrens@lanl.gov)

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name to read. It should
be an MPAS format NetCDF file ending in .nc.
|

|
The value(s) must be a filename (or filenames).
|-
|'''PointArrayInfo''' (PointArrayInfo)
|

|

|

|-
|'''PointArrayStatus''' (PointArrayStatus)
|
This property lists which NetCDF dual-grid point
variables to load.
|

|
The list of array names is provided by the reader.
|-
|'''CellArrayInfo''' (CellArrayInfo)
|

|

|

|-
|'''CellArrayStatus''' (CellArrayStatus)
|
This property lists which NetCDF dual-grid cell
variables to load.
|

|
The list of array names is provided by the reader.
|-
|'''ProjectLatLon''' (ProjectLatLon)
|
This property indicates whether to view the data in the
lat/lon projection.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''ShowMultilayerView''' (ShowMultilayerView)
|
This property indicates whether to show multiple layers
in one view, with each vertical level having the same thickness,
specified by the layer thickness slider. For ocean data, the layers
correspond to data at vertical level whose number increases towards the
center of the sphere. For atmospheric data, the layers correspond to
data at vertical levels increasing away from the
center.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''IsAtmosphere''' (IsAtmosphere)
|
This property indicates whether data is atmospheric.
Checking this ensures the vertical levels will go up away from the
sphere instead of down towards the center.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''LayerThicknessRangeInfo''' (LayerThicknessRangeInfo)
|

|

|

|-
|'''Layer Thickness''' (LayerThickness)
|
This property specifies how thick the layer should be if
viewing the data in multilayer view. Each layer corresponds to a
vertical level. A good starting point is 100,000 for the spherical view
and 10 for the lat/lon projection. Click on -Z after applying this
change, since the scale may change drastically.
|
10
|

|-
|'''CenterLonRangeInfo''' (CenterLonRangeInfo)
|

|

|

|-
|'''Center Longitude''' (CenterLon)
|
This property specifies where the center will be viewed
for a lat/lon projection.
|
180
|

|-
|'''VerticalLevelRangeInfo''' (VerticalLevelRangeInfo)
|

|

|

|-
|'''VerticalLevel''' (VerticalLevel)
|
This property specifies which vertical level is viewed
if not in multilayer view. Only the data for that vertical level will
be viewed. The grid is essentially the same for each vertical level,
however at some ocean levels, especially the lower ones, due to the
topography, the grid becomes more sparse where there is
land.
|
0
|

|-
|'''TimestepValues''' (TimestepValues)
|

|

|


|}

==NetCDF POP reader==

Reads rectilinear grid data from a NetCDF POP file.
The reader reads regular rectilinear grid (image/volume) data from a
NetCDF file.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==NetCDF Reader==

Reads regular arrays from netCDF files. Will also read any topological information specified by the COARDS and CF conventions.Reads
arrays from netCDF files into structured VTK data sets. In
the absence of any other information, the files will be
read as image data. This reader will also look for meta
information specified by the CF convention that specify
things like topology and time. This information can cause
the output to be a nonuniform rectilinear grid or
curvilinear (structured) grid. Details on the CF
convention can be found at http://cf-pcmdi.llnl.gov/. It
should be noted that the CF convention is a superset of
the COARDS convention, so COARDS conventions will also be
recognized.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
The name of the files to load.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
This magic property sends time information to the
animation panel. ParaView will then automatically set up the animation
to visit the time steps defined in the file.
|

|


|}

==Nrrd Reader==

Reads raw image files with Nrrd meta data.The
Nrrd reader reads raw image data much like the Raw Image
Reader except that it will also read metadata information
in the Nrrd format. This means that the reader will
automatically set information like file dimensions. There
are several limitations on what type of nrrd files we can
read. This reader only supports nrrd files in raw format.
Other encodings like ascii and hex will result in errors.
When reading in detached headers, this only supports
reading one file that is detached.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
The name of the file to read (or the meta data file that
will point to the actual file).
|

|
The value(s) must be a filename (or filenames).
|-
|'''Data VOI''' (DataVOI)
|
The data volume of interest (VOI). The VOI is a
sub-extent of the data that you want loaded. Setting a VOI is useful
when reading from a large data set and you are only interested in a
small portion of the data. If left containing all 0's, then the reader
will load in the entire data set.
|
0 0 0 0 0 0
|


|}

==OpenFOAMReader==

Reads OpenFOAM data files, producing multi-block dataset.The OpenFOAM reader
reads OpenFOAM data files and outputs multi-block
datasets. Mesh information and time dependent data are
supported. The OpenFOAM format is described fully at
http://www.openfoam.com/docs/user/basic-file-format.php

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''CaseType''' (CaseType)
|
The property indicates whether decomposed mesh or
reconstructed mesh should be read
|
1
|
The value(s) is an enumeration of the following:
* Decomposed Case (0)
* Reconstructed Case (1)
|-
|'''Create cell-to-point filtered data''' (CreateCellToPoint)
|
Create point data from cell data. Beware: the filter
does not do inverse distance weighting.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''Add dimensional units to array names''' (AddDimensionsToArrayNames)
|
Read dimensional units from field data and add them to
array names as human-readable string.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|

|-
|'''PatchArrayInfo''' (PatchArrayInfo)
|

|

|

|-
|'''MeshRegions''' (MeshRegions)
|

|

|
The list of array names is provided by the reader.
|-
|'''CellArrayInfo''' (CellArrayInfo)
|

|

|

|-
|'''CellArrays''' (CellArrays)
|

|

|
The list of array names is provided by the reader.
|-
|'''PointArrayInfo''' (PointArrayInfo)
|

|

|

|-
|'''PointArrays''' (PointArrays)
|

|

|
The list of array names is provided by the reader.
|-
|'''LagrangianArrayInfo''' (LagrangianArrayInfo)
|

|

|

|-
|'''LagrangianArrays''' (LagrangianArrays)
|

|

|
The list of array names is provided by the reader.
|-
|'''Cache mesh''' (CacheMesh)
|
Cache the OpenFOAM mesh between GUI selection
changes.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''Decompose polyhedra''' (DecomposePolyhedra)
|
Decompose polyhedra into tetrahedra and
pyramids.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''List timesteps according to controlDict''' (ListTimeStepsByControlDict)
|
List time directories listed according to the settings
in controlDict.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''Lagrangian positions are in OF 1.3 binary format''' (PositionsIsIn13Format)
|
Set if Lagrangian positions files are in OpenFOAM 1.3
binary format.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''Read zones''' (ReadZones)
|
Read point/face/cell-Zones?
|
0
|
Accepts boolean values (0 or 1).

|}

==PDB Reader==

Reads PDB molecule files.The PDB reader reads files in
the format used by the Protein Data Bank (an archive of
experimentally determined three-dimensional structures of
biological macromolecules). The expected file extension is
.pdb. The output datasets are polygonal.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the PDB
reader.
|

|
The value(s) must be a filename (or filenames).

|}

==PLOT3D Meta-File Reader==

The main goal of this reader is to make it easy to read PLOT3D files or time series of PLOT3D files.
The main goal of this reader is to make it easy to read PLOT3D files,
specifically time series of PLOT3D files. PLOT3D files can take many
different forms based on their content. Unfortunately, it is not a
self-describing format therefore the user needs to pass information
about the contents of the file to the reader. Normally, this is done
by setting a number of member variables. The goal of this reader is to
provide a simple format that enable the writer of the PLOT3D file to
describe its settings as well as group a number of files as a time
series.


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the meta file
name
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==PLOT3D Reader==

Reads ASCII or binary PLOT3D files.PLOT3D is a plotting
package developed at NASA. The PLOT3D reader can read both
ASCII and binary PLOT3D files. The default file extension
for the geometry files is .xyz, and the default file
extension for the solution files is .q. The output of this
reader is a multi-block dataset containing curvilinear
(structured grid) datasets.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''QFileName''' (QFileName)
|
The list of .q (solution) files for the PLOT3D reader.
There can be more than one. If more that one file is specified, the
reader will switch to file-series mode in which it will pretend that it
can support time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==PLY Reader==

Reads files stored in Stanford University's PLY polygonal file format.The PLY reader
reads files stored in the PLY polygonal file format
developed at Stanford University. The PLY files that
ParaView can read must have the elements "vertex" and
"face" defined. The "vertex" elements must have the
propertys "x", "y", and "z". The "face" elements must have
the property "vertex_indices" defined. The default file
extension for this reader is .ply.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the PLY
reader.
|

|
The value(s) must be a filename (or filenames).

|}

==PNG Series Reader==

Reads a PNG file into an image data.The PNG reader reads PNG
(Portable Network Graphics) files, and the output is a
uniform rectilinear (image/volume) dataset. The default
file extension is .png.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the reader. If more than
one file is specified, the reader will switch to file series mode in
which it will pretend that it can support time and provide one file per
time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==PVD Reader==

Load a dataset stored in ParaView's PVD file format.The PVD reader reads data
stored in ParaView's PVD file format. The .pvd file is
essentially a header file that collects together other
data files stored in VTK's XML-based file
format.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the PVD
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==Parallel NetCDF POP reader==

Reads rectilinear grid data from a NetCDF POP file in parallel.
The reader reads regular rectilinear grid (image/volume) data from a
NetCDF file. Only a subset of the processes actually read the file and
these processes communicate the data to other processes.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==Particles Reader==

Reads particle data.vtkParticleReader reads
either a binary or a text file of particles. Each particle
can have associated with it an optional scalar value. So
the format is: x, y, z, scalar (all floats or doubles).
The text file can consist of a comma delimited set of
values. In most cases vtkParticleReader can automatically
determine whether the file is text or binary. The data can
be either float or double. Progress updates are provided.
With respect to binary files, random access into the file
to read pieces is supported.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==Partitioned Legacy VTK Reader==

Reads files stored in VTK partitioned legacy format.The
Partitioned Legacy VTK reader loads files stored in VTK's
partitioned legac file format (before VTK 4.2, although
still supported). The expected file extension is .pvtk.
The type of the dataset may be structured grid, uniform
rectilinear grid (image/volume), non-uniform rectilinear
grid, unstructured grid, or polygonal.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the
Partitioned Legacy VTK reader.
|

|
The value(s) must be a filename (or filenames).

|}

==Phasta Reader==

Reads the parallel Phasta meta-file and the underlying Phasta files.
This Phasta reader reads files stored in the Phasta (a CFD
package) format. The expected file extension is .pht. The
output of this reader is a multipiece data
set.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the Phasta
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==RTXMLPolyDataReader==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
Set the file name for the real-time VTK polygonal
dataset reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''Location''' (Location)
|
Set the data directory containing real time data
files.
|

|
The value(s) must be a filename (or filenames).
|-
|'''NextFileName''' (NextFileName)
|

|

|

|-
|'''NewDataAvailable''' (NewDataAvailable)
|

|
2
|


|}

==Restarted Sim Exodus Reader==

Reads collections of Exodus output files from simulations that were restarted.
When a simulation that outputs exodus files is restarted,
typically you get a new set of output files. When you read
them in your visualization, you often want to string these
file sets together as if it was one continuous dump of
files. This reader allows you to specify a metadata file
that will implicitly string the files
together.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
This points to a special metadata file that lists the
output files for each restart.
|

|
The value(s) must be a filename (or filenames).
|-
|'''UseMetaFile''' (UseMetaFile)
|
This hidden property must always be set to 1 for this
proxy to work.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|


|}

==Restarted Sim Spy Plot Reader==

Reads collections of SPCTH files from simulations that were restarted.
When a CTH simulation is restarted, typically you get a
new set of output files. When you read them in your
visualization, you often want to string these file sets
together as if it was one continuous dump of files. This
reader allows you to specify a metadata file that will
implicitly string the files together.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This points to a special metadata file that lists the
output files for each restart.
|

|
The value(s) must be a filename (or filenames).
|-
|'''UseMetaFile''' (UseMetaFile)
|
This hidden property must always be set to 1 for this
proxy to work.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|


|}

==SLAC Data Reader==

A reader for a data format used by Omega3p, Tau3p, and several other tools used at the Standford Linear Accelerator Center (SLAC)A reader for a data format
used by Omega3p, Tau3p, and several other tools used at the
Standford Linear Accelerator Center (SLAC). The underlying
format uses netCDF to store arrays, but also imposes several
conventions to form an unstructured grid of
elements.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''MeshFileName''' (MeshFileName)
|
The name of the mesh file to load.
|

|
The value(s) must be a filename (or filenames).
|-
|'''ModeFileName''' (ModeFileName)
|
The name of the mode files to load. The points in the
mode file should be the same as the mesh file.
|

|
The value(s) must be a filename (or filenames).
|-
|'''ReadInternalVolume''' (ReadInternalVolume)
|
If on, read the internal volume of the data
set.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''ReadExternalSurface''' (ReadExternalSurface)
|
If on, read the external surfaces of the data
set.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''ReadMidpoints''' (ReadMidpoints)
|
If on, reads midpoint information for external surfaces
and builds quadratic surface triangles.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''TimestepValues''' (TimestepValues)
|
This magic property sends time information to the
animation panel. ParaView will then automatically set up the animation
to visit the time steps defined in the file.
|

|

|-
|'''TimeRange''' (TimeRange)
|
This magic property sends time range information to the
animation panel. ParaView uses this information to set the range of
time for the animation. This property is important for when there are
no timesteps but you still want to give ParaView a range of values to
use.
|

|

|-
|'''FrequencyScale''' (FrequencyScale)
|

Sets the scale factor for each mode. By default, each scale factor is
set to 1.

|

|

|-
|'''FrequencyScaleInfo''' (FrequencyScaleInfo)
|

|

|

|-
|'''PhaseShift''' (PhaseShift)
|

Sets the phase offset for each mode. By default, shift is set to 0.

|

|

|-
|'''PhaseShiftInfo''' (PhaseShiftInfo)
|

|

|


|}

==SLAC Particle Data Reader==

The SLAC Particle data reader.The SLAC Particle data reader.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
A list of files to be read in a time
series.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==STL Reader==

Reads ASCII or binary stereo lithography (STL) files.The STL reader reads ASCII or
binary stereo lithography (STL) files. The expected file
extension is .stl. The output of this reader is a
polygonal dataset. This reader also supports file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the reader. If more than
one file is specified, the reader will switch to file series mode in
which it will pretend that it can support time and provide one file per
time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==Spy Plot Reader==

Reads files in the SPCTH Spy Plot file format.The Spy
Plot reader loads an ASCII meta-file called the "case"
file (extension .spcth). The case file lists all the
binary files containing the dataset. This reader produces
hierarchical datasets.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Cell Arrays''' (CellArrayStatus)
|
This property lists which cell-centered arrays to
read.
|

|
The list of array names is provided by the reader.
|-
|'''FileName''' (FileName)
|
This property specifies the file name for the Spy Plot
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|

|-
|'''DownConvertVolumeFraction''' (DownConvertVolumeFraction)
|
If this property is set to 0, the type of the volume
fraction is float; is set to 1, the type is unsigned
char.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''ComputeDerivedVariables''' (ComputeDerivedVariables)
|
If this property is set to 1, the reader will convert
derived variables like material density for the materials that the user
has selected. For Density the user needs to have selected Material Mass
and Material Volume Fraction.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''DistributeFiles''' (DistributeFiles)
|
In parallel mode, if this property is set to 1, the
reader will distribute files or blocks.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''GenerateLevelArray''' (GenerateLevelArray)
|
If this property is set to 1, a cell array will be
generated that stores the level of each block.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''GenerateActiveBlockArray''' (GenerateActiveBlockArray)
|
If this property is set to 1, a cell array will be
generated that stores the active status of a block.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''GenerateTracers''' (GenerateTracers)
|
If this property is set to 1, a cell array will be
generated that stores the coordinates of any tracers.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''GenerateMarkers''' (GenerateMarkers)
|
If this property is set to 1, a second output will be
created using the markers data stored in the file.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''GenerateBlockIdArray''' (GenerateBlockIdArray)
|
If this property is set to 1, a cell array will be
generated that stores a unique blockId for each block.
|
0
|
Accepts boolean values (0 or 1).
|-
|'''MergeXYZComponents''' (MergeXYZComponents)
|
If this property is set to 1, cell arrays named (for
example) X velocity, Y velocity and Z velocity will be combined into a
single vector array named velocity.
|
1
|
Accepts boolean values (0 or 1).
|-
|'''CellArrayInfo''' (CellArrayInfo)
|

|

|


|}

==TIFF Reader==

Reads a TIFF file into an image data.The TIFF reader reads TIFF
(Tagged Image File Format) files, and the output is a
uniform rectilinear (image/volume) dataset. The default
file extension is .tiff.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the TIFF
reader.
|

|
The value(s) must be a filename (or filenames).

|}

==TIFF Series Reader==

Reads a series of TIFF files into an time sequence of image datas.The TIFF series
reader reads TIFF files. The output is a time sequence of
uniform rectilinear (image/volume) dataset. The default
file extension is .tif or .tiff.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the reader. If more than
one file is specified, the reader will switch to file series mode in
which it will pretend that it can support time and provide one file per
time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==Tecplot Reader==

Reads files in the Tecplot ASCII file format.
The Tecplot reader extracts multiple zones (blocks) of
data from a Tecplot ASCII file, in which a zone is stored
in either point packing mode (i.e., tuple-based, with only
point data supported) or block packing mode (i.e.,
component-based, with point data and cell data supported).
The output of the reader is a vtkMultiBlockDataset, of
which each block is either a vtkStructuredGrid or a
vtkUnstructuredGrid. This supports reading a file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==Unstructured NetCDF POP reader==

Reads rectilinear grid data from a NetCDF POP file and converts it into unstructured data.
The reader reads regular rectilinear grid (image/volume) data from a
NetCDF file and turns it into an unstructured spherical
grid.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==VPIC Reader==

Reads distributed VPIC files into an ImageData.VPIC is a 3D
kinetic plasma particle-in-cell simulation. The input file
(.vpc) opened by the VPIC reader is an ASCII description
of the data files which are written one file per
processor, per category and per time step. These are
arranged in subdirectories per category (field data and
hydrology data) and then in time step
subdirectories.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
ASCII .vpc file describes locations of data files, grid
sizes, time step sizes and type and order of data written to the
files.
|

|
The value(s) must be a filename (or filenames).
|-
|'''PointArrayInfo''' (PointArrayInfo)
|

|

|

|-
|'''Point Arrays''' (PointArrayStatus)
|
Variables written to the data files are described in the
.vpc file and are presented for selection. Only selected variables are
loaded for a time step.
|

|
The list of array names is provided by the reader.
|-
|'''TimestepValues''' (TimestepValues)
|

|

|

|-
|'''Stride''' (SetStride)
|
VPIC data may be very large and not all is needed for
effective visualization. Setting the stride selects every nth data item
within the files for display.
|
1 1 1
|

|-
|'''DefaultXExtent''' (DefaultXExtent)
|
VPIC data is written one file per simulation processor.
This coarse map of files is used in partitioning files between
visualizing processors so that each ParaView processor has its own set
of files to display. Default extent is all files
available.
|

|

|-
|'''DefaultYExtent''' (DefaultYExtent)
|
VPIC data is written one file per simulation processor.
This coarse map of files is used in partitioning files between
visualizing processors so that each ParaView processor has its own set
of files to display. Default extent is all files
available.
|

|

|-
|'''DefaultZExtent''' (DefaultZExtent)
|
VPIC data is written one file per simulation processor.
This coarse map of files is used in partitioning files between
visualizing processors so that each ParaView processor has its own set
of files to display. Default extent is all files
available.
|

|

|-
|'''X Extent''' (XExtent)
|
VPIC data is written one file per simulation processor.
This coarse map of files is used in partitioning files between
visualizing processors so that each ParaView processor has its own set
of files to display. Ghost cell overlap is handled within the reader.
To limit the View of VPIC information the extent in the X dimension of
"files" can be specified. Only the files selected will be displayed and
they will be partitioned between the visualizing processors, allowing a
higher resolution over a smaller area.
|
-1 -1
|

|-
|'''Y Extent''' (YExtent)
|
VPIC data is written one file per simulation processor.
This coarse map of files is used in partitioning files between
visualizing processors so that each ParaView processor has its own set
of files to display. Ghost cell overlap is handled within the reader.
To limit the View of VPIC information the extent in the Y dimension of
"files" can be specified. Only the files selected will be displayed and
they will be partitioned between the visualizing processors, allowing a
higher resolution over a smaller area.
|
-1 -1
|

|-
|'''Z Extent''' (ZExtent)
|
VPIC data is written one file per simulation processor.
This coarse map of files is used in partitioning files between
visualizing processors so that each ParaView processor has its own set
of files to display. Ghost cell overlap is handled within the reader.
To limit the View of VPIC information the extent in the Z dimension of
"files" can be specified. Only the files selected will be displayed and
they will be partitioned between the visualizing processors, allowing a
higher resolution over a smaller area.
|
-1 -1
|


|}

==VRML Reader==

Load the geometry from a VRML 2.0 file.The VRML reader loads
only the geometry from a VRML (Virtual Reality Modeling
Language) 2.0 file. The expected file extension is .wrl.
The output of this reader is a polygonal
dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the VRML
reader.
|

|
The value(s) must be a filename (or filenames).

|}

==Wavefront OBJ Reader==

Reads Wavefront .OBJ files to produce polygonal and line data.The OBJ reader
reads data stored in Wavefront .OBJ format. The expected
file extension is .obj, the datasets resulting from
reading these files are polygons and
lines.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the OBJ
reader.
|

|
The value(s) must be a filename (or filenames).

|}

==WindBlade reader==

Reads WindBlade/Firetec simulation files possibly including wind turbines and topology files.
WindBlade/Firetec is a simulation dealing with the effects
of wind on wind turbines or on the spread of fires. It
produces three outputs - a StructuredGrid for the wind
data fields, a StructuredGrid for the ground topology, and
a PolyData for turning turbine blades. The input file
(.wind) opened by the WindBlade reader is an ASCII
description of the data files expected. Data is
accumulated by the simulation processor and is written one
file per time step. WindBlade can deal with topology if a
flag is turned on and expects (x,y) data for the ground.
It also can deal with turning wind turbines from other
time step data files which gives polygon positions of
segments of the blades and data for each
segment.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Filename''' (Filename)
|
ASCII .wind file describes locations of data files, grid
sizes and variable deltas, time step sizes, whether topology is used,
whether turbines are used, and type and order of data written to the
files.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|

|

|

|-
|'''PointArrayInfo''' (PointArrayInfo)
|

|

|

|-
|'''Point Arrays''' (PointArrayStatus)
|
Variables written to the data files are described in the
.wind file and are presented for selection. Only selected variables are
loaded for a time step.
|

|
The list of array names is provided by the reader.

|}

==XDMF Reader==

Reads XDMF (eXtensible Data Model and Format) files.The XDMF reader reads
files in XDMF format. The expected file extension is .xmf.
Metadata is stored in the XDMF file using an XML format,
and large attribute arrays are stored in a corresponding
HDF5 file. The output may be unstructured grid, structured
grid, or rectiliner grid. See http://www.xdmf.org for a
description of the file format.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileNames''' (FileNames)
|
The list of files to be read by the
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Hierarchical Box Data reader==

Reads a VTK XML-based data file containing a hierarchical dataset containing vtkUniformGrids.
The XML Hierarchical Box Data reader reads VTK's XML-based
file format containing a vtkHierarchicalBoxDataSet. The
expected file extensions is either .vthb or
.vth.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML polygonal dataset format. The standard
extension is .vtp. If more than one file is specified, the reader will
switch to file series mode in which it will pretend that it can support
time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Image Data Reader==

Reads serial VTK XML image data files.The XML Image
Data reader reads the VTK XML image data file format. The
standard extension is .vti. This reader also supports file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML image data format. The standard extension
is .vti. If more than one file is specified, the reader will switch to
file series mode in which it will pretend that it can support time and
provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML MultiBlock Data Reader==

Reads a VTK XML multi-block data file and the serial VTK XML data files to which it points.The XML
Multi-Block Data reader reads the VTK XML multi-block data
file format. XML multi-block data files are meta-files
that point to a list of serial VTK XML files. When reading
in parallel, this reader will distribute sub-blocks among
processors. The expected file extensions are .vtm and
.vtmb.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML polygonal dataset format. The standard
extension is .vtp. If more than one file is specified, the reader will
switch to file series mode in which it will pretend that it can support
time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Partitioned Image Data Reader==

Reads the summary file and the associated VTK XML image data files.
The XML Partitioned Image Data reader reads the
partitioned VTK image data file format. It reads the
partitioned format's summary file and then the associated
VTK XML image data files. The expected file extension is
.pvti. This reader also supports file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the partitioned VTK XML image data format. The
standard extension is .pvti. If more than one file is specified, the
reader will switch to file series mode in which it will pretend that it
can support time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Partitioned Polydata Reader==

Reads the summary file and the assicoated VTK XML polydata files.The
XML Partitioned Polydata reader reads the partitioned VTK
polydata file format. It reads the partitioned format's
summary file and then the associated VTK XML polydata
files. The expected file extension is .pvtp. This reader
also supports file series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the partitioned VTK XML polygonal dataset format. The
standard extension is .pvtp. If more than one file is specified, the
reader will switch to file series mode in which it will pretend that it
can support time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Partitioned Rectilinear Grid Reader==

Reads the summary file and the associated VTK XML rectilinear grid data files.
The XML Partitioned Rectilinear Grid reader reads the
partitioned VTK rectilinear grid file format. It reads the
partitioned format's summary file and then the associated
VTK XML rectilinear grid files. The expected file
extension is .pvtr. This reader also supports file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the partitioned VTK XML rectilinear grid data format.
The standard extension is .pvtr. If more than one file is specified,
the reader will switch to file series mode in which it will pretend
that it can support time and provide one file per time
step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Partitioned Structured Grid Reader==

Reads the summary file and the associated VTK XML structured grid data files.
The XML Partitioned Structured Grid reader reads the
partitioned VTK structured grid data file format. It reads
the partitioned format's summary file and then the
associated VTK XML structured grid data files. The
expected file extension is .pvts. This reader also
supports file series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the partitioned VTK XML structured grid data format.
The standard extension is .pvts. If more than one file is specified,
the reader will switch to file series mode in which it will pretend
that it can support time and provide one file per time
step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Partitioned Unstructured Grid Reader==

Reads the summary file and the associated VTK XML unstructured grid data files.
The XML Partitioned Unstructured Grid reader reads the
partitioned VTK unstructured grid data file format. It
reads the partitioned format's summary file and then the
associated VTK XML unstructured grid data files. The
expected file extension is .pvtu. This reader also
supports file series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the partitioned VTK XML unstructured grid data
format. The standard extension is .pvtu. If more than one file is
specified, the reader will switch to file series mode in which it will
pretend that it can support time and provide one file per time
step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML PolyData Ensemble Reader==

Reads ensembles of VTK XML polydata files.The XML
Polydata reader reads ensembles of VTK XML polydata files. The
standard extension is .evtp.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''MetaFileName''' (MetaFileName)
|
The meta-file for the reader
|

|
The value(s) must be a filename (or filenames).
|-
|'''FileIndexRange''' (FileIndexRange)
|
Smallest and largest index for the list of
simulations files. For instance, if we have 10 simulations the
FileIndexRange is [0,9].

|
0 0
|

|-
|'''FileIndex''' (FileIndex)
|

The index of the simulation file in the ensemble.

|
0
|

|-
|'''TimestepValues''' (TimestepValues)
|

Reports time values to the GUI.

|

|


|}

==XML PolyData Reader==

Reads serial VTK XML polydata files.The XML Polydata
reader reads the VTK XML polydata file format. The
standard extension is .vtp. This reader also supports file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML polygonal dataset format. The standard
extension is .vtp. If more than one file is specified, the reader will
switch to file series mode in which it will pretend that it can support
time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Rectilinear Grid Reader==

Reads serial VTK XML rectilinear grid data files.The
XML Rectilinear Grid reader reads the VTK XML rectilinear
grid data file format. The standard extension is .vtr.
This reader also supports file series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML rectilinear grid data format. The
standard extension is .vtr. If more than one file is specified, the
reader will switch to file series mode in which it will pretend that it
can support time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Structured Grid Reader==

Reads serial VTK XML structured grid data files.The
XML Structured Grid reader reads the VTK XML structured
grid data file format. The standard extension is .vts.
This reader also supports file series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML structured grid data format. The standard
extension is .vts. If more than one file is specified, the reader will
switch to file series mode in which it will pretend that it can support
time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML UniformGrid AMR Reader==

Reads a VTK XML-based data file containing a AMR datasets .
This reader reads Overlapping and Non-Overlapping AMR
datasets in VTK XML format. This reader reads the newer
version of the format. For version 1.0 and less, use
XMLHierarchicalBoxDataReader.
The expected file extensions is either .vthb or .vth.


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML polygonal dataset format. The standard
extension is .vtp. If more than one file is specified, the reader will
switch to file series mode in which it will pretend that it can support
time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XML Unstructured Grid Reader==

Reads serial VTK XML unstructured grid data files.
The XML Unstructured Grid reader reads the VTK XML
unstructured grid data file format. The standard extension
is .vtu. This reader also supports file
series.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileNameInfo''' (FileNameInfo)
|

|

|

|-
|'''FileName''' (FileName)
|
The list of files to be read by the reader. Each file is
expected to be in the VTK XML unstructured grid data format. The
standard extension is .vtu. If more than one file is specified, the
reader will switch to file series mode in which it will pretend that it
can support time and provide one file per time step.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

==XYZ Reader==

Reads XYZ molecular data files into a polygonal dataset.The XYZ reader
reads XYZ molecular data files. The expected file
extension is .xyz. The output of this reader is a
polygonal dataset.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the XYZ
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''TimeStep''' (TimeStep)
|
This property specifies the timestep the XYZ reader
should load.
|
0
|


|}

==Xdmf3ReaderS==

Reads XDMF data files so that they can be visualized using VTK.
Reads XDMF data files so that they can be visualized using VTK. The
output data produced by this reader depends on the number of grids in
the data file. If the data file has a single domain with a single
grid, then the output type is a vtkDataSet subclass of the appropriate
type, otherwise it's a vtkMultiBlockDataSet.


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''AsTime''' (AsTime)
|
This hidden property controls whether the reader should
treat a file series as a temporal or spatial partitioning.
|
0
|
Accepts boolean values (0 or 1).

|}

==Xdmf3ReaderT==

Reads XDMF data files so that they can be visualized using VTK.
Reads XDMF data files so that they can be visualized using VTK. The
output data produced by this reader depends on the number of grids in
the data file. If the data file has a single domain with a single
grid, then the output type is a vtkDataSet subclass of the appropriate
type, otherwise it's a vtkMultiBlockDataSet.


{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''AsTime''' (AsTime)
|
This hidden property controls whether the reader should
treat a file series as a temporal or spatial partitioning.
|
1
|
Accepts boolean values (0 or 1).

|}

==proSTAR (STARCD) Reader==

Reads geometry in proSTAR (STARCD) file format.
ProStarReader creates an unstructured grid dataset. It
reads .cel/.vrt files stored in proSTAR (STARCD) ASCII
format.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
Set the file name for the proSTAR (STARCD)
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''ScaleFactor''' (ScaleFactor)
|
Scaling factor for the points
|
1
|


|}

==spcth history reader==

Reads an spcth history file where each row translates into a single time step and the columns are points, materials and properties.

{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''FileName''' (FileName)
|
This property specifies the file name for the VRML
reader.
|

|
The value(s) must be a filename (or filenames).
|-
|'''CommentCharacter''' (CommentCharacter)
|
This property lists the characters that is used as the
first character on comment lines
|
%
|

|-
|'''Delimeter''' (Delimeter)
|
Character that is used as the delimeter.
|
,
|

|-
|'''TimestepValues''' (TimestepValues)
|
Available timestep values.
|

|


|}

